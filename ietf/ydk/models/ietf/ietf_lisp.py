""" ietf_lisp 

This YANG module defines the generic configuration
and operational data for LISP. The module can be extended by
vendors to define vendor\-specific LISP configuration
parameters and policies.
Copyright (c) 2014 IETF Trust and the persons identified as
authors of the code.  All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD License
set forth in Section 4.c of the IETF Trust's Legal Provisions
Relating to IETF Documents
(http\://trustee.ietf.org/license\-info).

This version of this YANG module is part of RFC 6338; see
the RFC itself for full legal notices.


"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class AuthKeyTypeEnum(Enum):
    """
    AuthKeyTypeEnum

    Enumeration of the authentication mechansms supported by

    LISP.

    .. data:: none = 0

    	No authentication.

    .. data:: hmac_sha_1_96 = 1

    	HMAC-SHA-1-96 (RFC2404) authentication is used.

    .. data:: hmac_sha_256_128 = 2

    	HMAC-SHA-256-128 (RFC4868) authentication is used.

    """

    none = 0

    hmac_sha_1_96 = 1

    hmac_sha_256_128 = 2


    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['AuthKeyTypeEnum']


class MapReplyActionEnum(Enum):
    """
    MapReplyActionEnum

    Defines the lisp map\-cache ACT type

    .. data:: no_action = 0

    	Mapping is kept alive and no encapsulation occurs.

    .. data:: natively_forward = 1

    	Matching packets are not encapsulated or dropped but

    	natively forwarded.

    .. data:: send_map_request = 2

    	Matching packets invoke Map-Requests.

    .. data:: drop = 3

    	Matching packets are dropped.

    """

    no_action = 0

    natively_forward = 1

    send_map_request = 2

    drop = 3


    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['MapReplyActionEnum']



class LispRoleIdentity(object):
    """
    LISP router role.
    
    

    """

    _prefix = 'lisp'
    _revision = '2016-06-30'

    def __init__(self):
        pass

    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['LispRoleIdentity']['meta_info']


class MappingSystemIdentity(object):
    """
    Mapping System interface
    
    

    """

    _prefix = 'lisp'
    _revision = '2016-06-30'

    def __init__(self):
        pass

    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['MappingSystemIdentity']['meta_info']


class Lisp(object):
    """
    Configuration parameters for LISP subsystem.
    
    .. attribute:: lisp_router_instances
    
    	Configuration of LISP router instances
    	**type**\:   :py:class:`LispRouterInstances <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances>`
    
    .. attribute:: locator_sets
    
    	Container that defines a named locator set which can be referenced elsewhere
    	**type**\:   :py:class:`LocatorSets <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets>`
    
    

    """

    _prefix = 'lisp'
    _revision = '2016-06-30'

    def __init__(self):
        self.lisp_router_instances = Lisp.LispRouterInstances()
        self.lisp_router_instances.parent = self
        self.locator_sets = Lisp.LocatorSets()
        self.locator_sets.parent = self


    class LocatorSets(object):
        """
        Container that defines a named locator set which can be
        referenced elsewhere.
        
        .. attribute:: locator_set
        
        	Multiple locator sets can be configured
        	**type**\: list of    :py:class:`LocatorSet <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet>`
        
        

        """

        _prefix = 'lisp'
        _revision = '2016-06-30'

        def __init__(self):
            self.parent = None
            self.locator_set = YList()
            self.locator_set.parent = self
            self.locator_set.name = 'locator_set'


        class LocatorSet(object):
            """
            Multiple locator sets can be configured.
            
            .. attribute:: locator_set_name  <key>
            
            	Locator set name
            	**type**\:  str
            
            	**length:** 1..64
            
            .. attribute:: interface
            
            	The address type of the locator
            	**type**\: list of    :py:class:`Interface <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Interface>`
            
            .. attribute:: locator
            
            	List of routing locators
            	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator>`
            
            

            """

            _prefix = 'lisp'
            _revision = '2016-06-30'

            def __init__(self):
                self.parent = None
                self.locator_set_name = None
                self.interface = YList()
                self.interface.parent = self
                self.interface.name = 'interface'
                self.locator = YList()
                self.locator.parent = self
                self.locator.name = 'locator'


            class Interface(object):
                """
                The address type of the locator
                
                .. attribute:: interface_ref  <key>
                
                	The name of the interface supporting the locator
                	**type**\:  str
                
                	**refers to**\:  :py:class:`name <ydk.models.ietf.ietf_interfaces.Interfaces.Interface>`
                
                .. attribute:: multicast_priority
                
                	Locator's multicast priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: multicast_weight
                
                	Locator's multicast weight
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: priority
                
                	Locator priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: weight
                
                	Locator weight
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'lisp'
                _revision = '2016-06-30'

                def __init__(self):
                    self.parent = None
                    self.interface_ref = None
                    self.multicast_priority = None
                    self.multicast_weight = None
                    self.priority = None
                    self.weight = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.interface_ref is None:
                        raise YPYModelError('Key property interface_ref is None')

                    return self.parent._common_path +'/ietf-lisp:interface[ietf-lisp:interface-ref = ' + str(self.interface_ref) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface_ref is not None:
                        return True

                    if self.multicast_priority is not None:
                        return True

                    if self.multicast_weight is not None:
                        return True

                    if self.priority is not None:
                        return True

                    if self.weight is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.ietf._meta import _ietf_lisp as meta
                    return meta._meta_table['Lisp.LocatorSets.LocatorSet.Interface']['meta_info']


            class Locator(object):
                """
                List of routing locators
                
                .. attribute:: id  <key>
                
                	Locator id
                	**type**\:  str
                
                	**length:** 1..64
                
                .. attribute:: locator_address
                
                	The locator address provided in LISP canonincal address format
                	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress>`
                
                .. attribute:: multicast_priority
                
                	Locator's multicast priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: multicast_weight
                
                	Locator's multicast weight
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: priority
                
                	Locator priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: weight
                
                	Locator weight
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'lisp'
                _revision = '2016-06-30'

                def __init__(self):
                    self.parent = None
                    self.id = None
                    self.locator_address = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress()
                    self.locator_address.parent = self
                    self.multicast_priority = None
                    self.multicast_weight = None
                    self.priority = None
                    self.weight = None


                class LocatorAddress(object):
                    """
                    The locator address provided in LISP canonincal
                    address format.
                    
                    .. attribute:: address_type
                    
                    	Type of the LISP address
                    	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                    
                    	**mandatory**\: True
                    
                    .. attribute:: afi_list
                    
                    	AFI\-List LCAF type
                    	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AfiList>`
                    
                    .. attribute:: application_data
                    
                    	Application Data LCAF type
                    	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ApplicationData>`
                    
                    .. attribute:: as_number
                    
                    	AS Number
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: as_number_lcaf
                    
                    	AS Number LCAF type
                    	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AsNumberLcaf>`
                    
                    .. attribute:: distinguished_name
                    
                    	Distinguished Name address
                    	**type**\:  str
                    
                    .. attribute:: explicit_locator_path
                    
                    	Explicit Locator Path LCAF type
                    	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath>`
                    
                    .. attribute:: geo_coordinates
                    
                    	Geo\-coordinates LCAF type
                    	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates>`
                    
                    .. attribute:: instance_id
                    
                    	Instance ID LCAF type
                    	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.InstanceId>`
                    
                    .. attribute:: ipv4
                    
                    	IPv4 address
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: ipv4_prefix
                    
                    	IPv4 prefix
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                    
                    .. attribute:: ipv6
                    
                    	IPv6 address
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: ipv6_prefix
                    
                    	IPv6 address
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                    
                    .. attribute:: key_value_address
                    
                    	Key/Value Address LCAF type
                    	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.KeyValueAddress>`
                    
                    .. attribute:: mac
                    
                    	MAC address
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    .. attribute:: nat_traversal
                    
                    	NAT\-Traversal LCAF type
                    	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NatTraversal>`
                    
                    .. attribute:: no_address
                    
                    	No address
                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                    
                    .. attribute:: null_address
                    
                    	Null body LCAF type
                    	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NullAddress>`
                    
                    .. attribute:: service_path
                    
                    	Service Path LCAF type
                    	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ServicePath>`
                    
                    .. attribute:: source_dest_key
                    
                    	Source/Dest LCAF type
                    	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.SourceDestKey>`
                    
                    .. attribute:: virtual_network_id
                    
                    	Virtual Network Identifier (instance\-id) of the address
                    	**type**\:  int
                    
                    	**range:** 0..16777215
                    
                    

                    """

                    _prefix = 'lisp'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.address_type = None
                        self.afi_list = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AfiList()
                        self.afi_list.parent = self
                        self.application_data = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ApplicationData()
                        self.application_data.parent = self
                        self.as_number = None
                        self.as_number_lcaf = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AsNumberLcaf()
                        self.as_number_lcaf.parent = self
                        self.distinguished_name = None
                        self.explicit_locator_path = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath()
                        self.explicit_locator_path.parent = self
                        self.geo_coordinates = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates()
                        self.geo_coordinates.parent = self
                        self.instance_id = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.InstanceId()
                        self.instance_id.parent = self
                        self.ipv4 = None
                        self.ipv4_prefix = None
                        self.ipv6 = None
                        self.ipv6_prefix = None
                        self.key_value_address = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.KeyValueAddress()
                        self.key_value_address.parent = self
                        self.mac = None
                        self.nat_traversal = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NatTraversal()
                        self.nat_traversal.parent = self
                        self.no_address = None
                        self.null_address = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NullAddress()
                        self.null_address.parent = self
                        self.service_path = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ServicePath()
                        self.service_path.parent = self
                        self.source_dest_key = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.SourceDestKey()
                        self.source_dest_key.parent = self
                        self.virtual_network_id = None


                    class NullAddress(object):
                        """
                        Null body LCAF type
                        
                        .. attribute:: address
                        
                        	AFI address
                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:null-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NullAddress']['meta_info']


                    class AfiList(object):
                        """
                        AFI\-List LCAF type.
                        
                        .. attribute:: address_list
                        
                        	List of AFI addresses
                        	**type**\: one of the below types:
                        
                        	**type**\:  list of str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        
                        ----
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address_list = YLeafList()
                            self.address_list.parent = self
                            self.address_list.name = 'address_list'

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:afi-list'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address_list is not None:
                                for child in self.address_list:
                                    if child is not None:
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AfiList']['meta_info']


                    class InstanceId(object):
                        """
                        Instance ID LCAF type.
                        
                        .. attribute:: address
                        
                        	AFI address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: iid
                        
                        	Instance ID value
                        	**type**\:  int
                        
                        	**range:** 0..16777215
                        
                        .. attribute:: mask_length
                        
                        	Mask length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address = None
                            self.iid = None
                            self.mask_length = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:instance-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            if self.iid is not None:
                                return True

                            if self.mask_length is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.InstanceId']['meta_info']


                    class AsNumberLcaf(object):
                        """
                        AS Number LCAF type.
                        
                        .. attribute:: address
                        
                        	AFI address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: as_
                        
                        	AS number
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address = None
                            self.as_ = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:as-number-lcaf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            if self.as_ is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                    class ApplicationData(object):
                        """
                        Application Data LCAF type.
                        
                        .. attribute:: address
                        
                        	AFI address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: ip_tos
                        
                        	Type of service field
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: local_port_high
                        
                        	High end of local port range
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: local_port_low
                        
                        	Low end of local port range
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: protocol
                        
                        	Protocol number
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: remote_port_high
                        
                        	High end of remote port range
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: remote_port_low
                        
                        	Low end of remote port range
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address = None
                            self.ip_tos = None
                            self.local_port_high = None
                            self.local_port_low = None
                            self.protocol = None
                            self.remote_port_high = None
                            self.remote_port_low = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:application-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            if self.ip_tos is not None:
                                return True

                            if self.local_port_high is not None:
                                return True

                            if self.local_port_low is not None:
                                return True

                            if self.protocol is not None:
                                return True

                            if self.remote_port_high is not None:
                                return True

                            if self.remote_port_low is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ApplicationData']['meta_info']


                    class GeoCoordinates(object):
                        """
                        Geo\-coordinates LCAF type.
                        
                        .. attribute:: address
                        
                        	AFI address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: altitude
                        
                        	Height relative to sea level in meters
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: latitude
                        
                        	Bit that selects between North and South latitude
                        	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                        
                        .. attribute:: latitude_degrees
                        
                        	Degrees of latitude
                        	**type**\:  int
                        
                        	**range:** 0..90
                        
                        .. attribute:: latitude_minutes
                        
                        	Minutes of latitude
                        	**type**\:  int
                        
                        	**range:** 0..59
                        
                        .. attribute:: latitude_seconds
                        
                        	Seconds of latitude
                        	**type**\:  int
                        
                        	**range:** 0..59
                        
                        .. attribute:: longitude
                        
                        	Bit that selects between East and West longitude
                        	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                        
                        .. attribute:: longitude_degrees
                        
                        	Degrees of longitude
                        	**type**\:  int
                        
                        	**range:** 0..180
                        
                        .. attribute:: longitude_minutes
                        
                        	Minutes of longitude
                        	**type**\:  int
                        
                        	**range:** 0..59
                        
                        .. attribute:: longitude_seconds
                        
                        	Seconds of longitude
                        	**type**\:  int
                        
                        	**range:** 0..59
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.address = None
                            self.altitude = None
                            self.latitude = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates.Latitude()
                            self.latitude_degrees = None
                            self.latitude_minutes = None
                            self.latitude_seconds = None
                            self.longitude = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates.Longitude()
                            self.longitude_degrees = None
                            self.longitude_minutes = None
                            self.longitude_seconds = None

                        class Latitude(FixedBitsDict):
                            """
                            Latitude

                            Bit that selects between North and South latitude.
                            Keys are:- N

                            """

                            def __init__(self):
                                self._dictionary = { 
                                    'N':False,
                                }
                                self._pos_map = { 
                                }

                        class Longitude(FixedBitsDict):
                            """
                            Longitude

                            Bit that selects between East and West longitude.
                            Keys are:- E

                            """

                            def __init__(self):
                                self._dictionary = { 
                                    'E':False,
                                }
                                self._pos_map = { 
                                }

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:geo-coordinates'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            if self.altitude is not None:
                                return True

                            if self.latitude is not None:
                                if self.latitude._has_data():
                                    return True

                            if self.latitude_degrees is not None:
                                return True

                            if self.latitude_minutes is not None:
                                return True

                            if self.latitude_seconds is not None:
                                return True

                            if self.longitude is not None:
                                if self.longitude._has_data():
                                    return True

                            if self.longitude_degrees is not None:
                                return True

                            if self.longitude_minutes is not None:
                                return True

                            if self.longitude_seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                    class NatTraversal(object):
                        """
                        NAT\-Traversal LCAF type.
                        
                        .. attribute:: etr_udp_port
                        
                        	ETR UDP port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: global_etr_rloc
                        
                        	Global ETR RLOC address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: ms_rloc
                        
                        	Map\-Server RLOC address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: ms_udp_port
                        
                        	Map\-Server UDP port (set to 4342)
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: private_etr_rloc
                        
                        	Private ETR RLOC address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: rtr_rlocs
                        
                        	List of RTR RLOC addresses
                        	**type**\: one of the below types:
                        
                        	**type**\:  list of str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  list of str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  list of str
                        
                        
                        ----
                        	**type**\:  list of int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.etr_udp_port = None
                            self.global_etr_rloc = None
                            self.ms_rloc = None
                            self.ms_udp_port = None
                            self.private_etr_rloc = None
                            self.rtr_rlocs = YLeafList()
                            self.rtr_rlocs.parent = self
                            self.rtr_rlocs.name = 'rtr_rlocs'

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:nat-traversal'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.etr_udp_port is not None:
                                return True

                            if self.global_etr_rloc is not None:
                                return True

                            if self.ms_rloc is not None:
                                return True

                            if self.ms_udp_port is not None:
                                return True

                            if self.private_etr_rloc is not None:
                                return True

                            if self.rtr_rlocs is not None:
                                for child in self.rtr_rlocs:
                                    if child is not None:
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.NatTraversal']['meta_info']


                    class ExplicitLocatorPath(object):
                        """
                        Explicit Locator Path LCAF type.
                        
                        .. attribute:: hop
                        
                        	List of locator hops forming the explicit path
                        	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.hop = YList()
                            self.hop.parent = self
                            self.hop.name = 'hop'


                        class Hop(object):
                            """
                            List of locator hops forming the explicit path.
                            
                            .. attribute:: hop_id  <key>
                            
                            	Unique identifier for the hop
                            	**type**\:  str
                            
                            	**length:** 1..64
                            
                            .. attribute:: address
                            
                            	AFI address
                            	**type**\: one of the below types:
                            
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                            
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                            
                            
                            ----
                            
                            ----
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            
                            ----
                            	**type**\:  str
                            
                            
                            ----
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            
                            ----
                            .. attribute:: lrs_bits
                            
                            	Flag bits per hop
                            	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                            
                            

                            """

                            _prefix = 'lisp'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.hop_id = None
                                self.address = None
                                self.lrs_bits = Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                            class LrsBits(FixedBitsDict):
                                """
                                LrsBits

                                Flag bits per hop.
                                Keys are:- strict , rloc\-probe , lookup

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'strict':False,
                                        'rloc-probe':False,
                                        'lookup':False,
                                    }
                                    self._pos_map = { 
                                    }

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.hop_id is None:
                                    raise YPYModelError('Key property hop_id is None')

                                return self.parent._common_path +'/ietf-lisp:hop[ietf-lisp:hop-id = ' + str(self.hop_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.hop_id is not None:
                                    return True

                                if self.address is not None:
                                    return True

                                if self.lrs_bits is not None:
                                    if self.lrs_bits._has_data():
                                        return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:explicit-locator-path'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.hop is not None:
                                for child_ref in self.hop:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                    class SourceDestKey(object):
                        """
                        Source/Dest LCAF type.
                        
                        .. attribute:: dest
                        
                        	Destination address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: source
                        
                        	Source address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.dest = None
                            self.source = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:source-dest-key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dest is not None:
                                return True

                            if self.source is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.SourceDestKey']['meta_info']


                    class KeyValueAddress(object):
                        """
                        Key/Value Address LCAF type.
                        
                        .. attribute:: key
                        
                        	Address as Key
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        .. attribute:: value
                        
                        	Address as Value
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                        
                        
                        ----
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        
                        ----
                        	**type**\:  str
                        
                        
                        ----
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        
                        ----
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.key = None
                            self.value = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:key-value-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.key is not None:
                                return True

                            if self.value is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                    class ServicePath(object):
                        """
                        Service Path LCAF type.
                        
                        .. attribute:: service_index
                        
                        	Service path index for NSH header
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: service_path_id
                        
                        	Service path identifier for the path for NSH header
                        	**type**\:  int
                        
                        	**range:** 0..16777215
                        
                        

                        """

                        _prefix = 'lisp'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.service_index = None
                            self.service_path_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp:service-path'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.service_index is not None:
                                return True

                            if self.service_path_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress.ServicePath']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp:locator-address'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.address_type is not None:
                            return True

                        if self.afi_list is not None and self.afi_list._has_data():
                            return True

                        if self.application_data is not None and self.application_data._has_data():
                            return True

                        if self.as_number is not None:
                            return True

                        if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                            return True

                        if self.distinguished_name is not None:
                            return True

                        if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                            return True

                        if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                            return True

                        if self.instance_id is not None and self.instance_id._has_data():
                            return True

                        if self.ipv4 is not None:
                            return True

                        if self.ipv4_prefix is not None:
                            return True

                        if self.ipv6 is not None:
                            return True

                        if self.ipv6_prefix is not None:
                            return True

                        if self.key_value_address is not None and self.key_value_address._has_data():
                            return True

                        if self.mac is not None:
                            return True

                        if self.nat_traversal is not None and self.nat_traversal._has_data():
                            return True

                        if self.no_address is not None:
                            return True

                        if self.null_address is not None and self.null_address._has_data():
                            return True

                        if self.service_path is not None and self.service_path._has_data():
                            return True

                        if self.source_dest_key is not None and self.source_dest_key._has_data():
                            return True

                        if self.virtual_network_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator.LocatorAddress']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.id is None:
                        raise YPYModelError('Key property id is None')

                    return self.parent._common_path +'/ietf-lisp:locator[ietf-lisp:id = ' + str(self.id) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.id is not None:
                        return True

                    if self.locator_address is not None and self.locator_address._has_data():
                        return True

                    if self.multicast_priority is not None:
                        return True

                    if self.multicast_weight is not None:
                        return True

                    if self.priority is not None:
                        return True

                    if self.weight is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.ietf._meta import _ietf_lisp as meta
                    return meta._meta_table['Lisp.LocatorSets.LocatorSet.Locator']['meta_info']

            @property
            def _common_path(self):
                if self.locator_set_name is None:
                    raise YPYModelError('Key property locator_set_name is None')

                return '/ietf-lisp:lisp/ietf-lisp:locator-sets/ietf-lisp:locator-set[ietf-lisp:locator-set-name = ' + str(self.locator_set_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return True

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.locator_set_name is not None:
                    return True

                if self.interface is not None:
                    for child_ref in self.interface:
                        if child_ref._has_data():
                            return True

                if self.locator is not None:
                    for child_ref in self.locator:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.ietf._meta import _ietf_lisp as meta
                return meta._meta_table['Lisp.LocatorSets.LocatorSet']['meta_info']

        @property
        def _common_path(self):

            return '/ietf-lisp:lisp/ietf-lisp:locator-sets'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return True

        def _has_data(self):
            if not self.is_config():
                return False
            if self.locator_set is not None:
                for child_ref in self.locator_set:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.ietf._meta import _ietf_lisp as meta
            return meta._meta_table['Lisp.LocatorSets']['meta_info']


    class LispRouterInstances(object):
        """
        Configuration of LISP router instances.
        
        .. attribute:: lisp_router_instance
        
        	Each entry contains configuration of a lisp\-router instance
        	**type**\: list of    :py:class:`LispRouterInstance <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance>`
        
        

        """

        _prefix = 'lisp'
        _revision = '2016-06-30'

        def __init__(self):
            self.parent = None
            self.lisp_router_instance = YList()
            self.lisp_router_instance.parent = self
            self.lisp_router_instance.name = 'lisp_router_instance'


        class LispRouterInstance(object):
            """
            Each entry contains configuration of a lisp\-router
            instance.
            
            .. attribute:: lisp_router_instance_id  <key>
            
            	Arbitrary lisp\-router id
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: lisp_role
            
            	List of lisp device roles such as MS, MR, ITR, ETR, RTR
            	**type**\: list of    :py:class:`LispRole <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole>`
            
            

            """

            _prefix = 'lisp'
            _revision = '2016-06-30'

            def __init__(self):
                self.parent = None
                self.lisp_router_instance_id = None
                self.lisp_role = YList()
                self.lisp_role.parent = self
                self.lisp_role.name = 'lisp_role'


            class LispRole(object):
                """
                List of lisp device roles such as MS, MR, ITR,
                ETR, RTR.
                
                .. attribute:: lisp_role_type  <key>
                
                	The type of LISP device \- identity derived from the 'lisp\-device' base identity
                	**type**\:   :py:class:`LispRoleIdentity <ydk.models.ietf.ietf_lisp.LispRoleIdentity>`
                
                .. attribute:: enabled
                
                	Enable/disable the lisp\-role
                	**type**\:  bool
                
                	**default value**\: true
                
                .. attribute:: etr_cfg
                
                	ETR configuration parameters
                	**type**\:   :py:class:`EtrCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg>`
                
                	**presence node**\: True
                
                .. attribute:: itr_cfg
                
                	ITR configuration
                	**type**\:   :py:class:`ItrCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg>`
                
                	**presence node**\: True
                
                .. attribute:: map_resolver_cfg
                
                	Map\-Resolver configuration parameters
                	**type**\:   :py:class:`MapResolverCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapResolverCfg>`
                
                .. attribute:: map_server_cfg
                
                	Map\-Server configuration parameters
                	**type**\:   :py:class:`MapServerCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg>`
                
                .. attribute:: pitr_state
                
                	ITR state
                	**type**\:   :py:class:`PitrState <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState>`
                
                .. attribute:: proxy_etr_cfg
                
                	Proxy ETR configuration parameters
                	**type**\:   :py:class:`ProxyEtrCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg>`
                
                	**presence node**\: True
                
                .. attribute:: proxy_itr_cfg
                
                	Proxy\-ITR configuration parameters
                	**type**\:   :py:class:`ProxyItrCfg <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg>`
                
                	**presence node**\: True
                
                

                """

                _prefix = 'lisp'
                _revision = '2016-06-30'

                def __init__(self):
                    self.parent = None
                    self.lisp_role_type = None
                    self.enabled = None
                    self.etr_cfg = None
                    self.itr_cfg = None
                    self.map_resolver_cfg = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapResolverCfg()
                    self.map_resolver_cfg.parent = self
                    self.map_server_cfg = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg()
                    self.map_server_cfg.parent = self
                    self.pitr_state = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState()
                    self.pitr_state.parent = self
                    self.proxy_etr_cfg = None
                    self.proxy_itr_cfg = None


                class EtrCfg(object):
                    """
                    ETR configuration parameters.
                    
                    .. attribute:: local_eids
                    
                    	EIDs served by the ETR
                    	**type**\:   :py:class:`LocalEids <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids>`
                    
                    .. attribute:: _is_presence
                    
                    	Is present if this instance represents presence container else not
                    	**type**\: bool
                    
                    

                    This class is a :ref:`presence class<presence-class>`

                    """

                    _prefix = 'lisp-etr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self._is_presence = True
                        self.local_eids = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids()
                        self.local_eids.parent = self


                    class LocalEids(object):
                        """
                        EIDs served by the ETR.
                        
                        .. attribute:: local_eid
                        
                        	List of local EIDs
                        	**type**\: list of    :py:class:`LocalEid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid>`
                        
                        

                        """

                        _prefix = 'lisp-etr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.local_eid = YList()
                            self.local_eid.parent = self
                            self.local_eid.name = 'local_eid'


                        class LocalEid(object):
                            """
                            List of local EIDs.
                            
                            .. attribute:: id  <key>
                            
                            	Unique id of local EID
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	EID address in generic LISP address format
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress>`
                            
                            .. attribute:: map_servers
                            
                            	Map\-Servers configured for the ETR
                            	**type**\:   :py:class:`MapServers <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.MapServers>`
                            
                            .. attribute:: proxy_reply
                            
                            	Flag which if set in a Map\-Register requests that the Map\-Server proxy Map\-Replies for the ETR
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: record_ttl
                            
                            	Validity period of the EID to RLOCs mapping provided in Map\-Replies
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: registration_interval
                            
                            	Interval between consecutive Map\-Register messages
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: seconds
                            
                            	**default value**\: 60
                            
                            .. attribute:: rlocs
                            
                            	Locator set mapped to this local EID
                            	**type**\:  str
                            
                            	**length:** 1..64
                            
                            	**refers to**\:  :py:class:`locator_set_name <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet>`
                            
                            .. attribute:: want_map_notify
                            
                            	Flag which if set in a Map\-Register requests that a Map\-Notify be sent in response
                            	**type**\:  bool
                            
                            	**default value**\: true
                            
                            

                            """

                            _prefix = 'lisp-etr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress()
                                self.eid_address.parent = self
                                self.map_servers = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.MapServers()
                                self.map_servers.parent = self
                                self.proxy_reply = None
                                self.record_ttl = None
                                self.registration_interval = None
                                self.rlocs = None
                                self.want_map_notify = None


                            class EidAddress(object):
                                """
                                EID address in generic LISP address format.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-etr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-etr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-etr:hop[ietf-lisp-etr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-etr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-etr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.EidAddress']['meta_info']


                            class MapServers(object):
                                """
                                Map\-Servers configured for the ETR.
                                
                                .. attribute:: map_server
                                
                                	List of Map\-Servers configured for the ETR
                                	**type**\: list of    :py:class:`MapServer <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.MapServers.MapServer>`
                                
                                

                                """

                                _prefix = 'lisp-etr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.map_server = YList()
                                    self.map_server.parent = self
                                    self.map_server.name = 'map_server'


                                class MapServer(object):
                                    """
                                    List of Map\-Servers configured for the ETR.
                                    
                                    .. attribute:: address  <key>
                                    
                                    	Map\-Server address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    .. attribute:: auth_key
                                    
                                    	Map\-Server authentication key
                                    	**type**\:  str
                                    
                                    .. attribute:: auth_key_type
                                    
                                    	Map\-Server authentication type
                                    	**type**\:   :py:class:`AuthKeyTypeEnum <ydk.models.ietf.ietf_lisp.AuthKeyTypeEnum>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-etr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.auth_key = None
                                        self.auth_key_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.address is None:
                                            raise YPYModelError('Key property address is None')

                                        return self.parent._common_path +'/ietf-lisp-etr:map-server[ietf-lisp-etr:address = ' + str(self.address) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.auth_key is not None:
                                            return True

                                        if self.auth_key_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.MapServers.MapServer']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-etr:map-servers'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.map_server is not None:
                                        for child_ref in self.map_server:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid.MapServers']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-etr:local-eid[ietf-lisp-etr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                if self.map_servers is not None and self.map_servers._has_data():
                                    return True

                                if self.proxy_reply is not None:
                                    return True

                                if self.record_ttl is not None:
                                    return True

                                if self.registration_interval is not None:
                                    return True

                                if self.rlocs is not None:
                                    return True

                                if self.want_map_notify is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids.LocalEid']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-etr:local-eids'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.local_eid is not None:
                                for child_ref in self.local_eid:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg.LocalEids']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-etr:etr-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self._is_presence:
                            return True
                        if self.local_eids is not None and self.local_eids._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.EtrCfg']['meta_info']


                class ItrCfg(object):
                    """
                    ITR configuration
                    
                    .. attribute:: itr_rlocs
                    
                    	Refrence to a locator set that the ITR includes in Map\-Requests
                    	**type**\:  str
                    
                    	**length:** 1..64
                    
                    	**refers to**\:  :py:class:`locator_set_name <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet>`
                    
                    .. attribute:: map_cache
                    
                    	EID to RLOCs mappings cache
                    	**type**\:   :py:class:`MapCache <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache>`
                    
                    .. attribute:: map_resolvers
                    
                    	The Map\-Resolvers configured for the ITR
                    	**type**\:   :py:class:`MapResolvers <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers>`
                    
                    .. attribute:: proxy_etrs
                    
                    	Proxy ETRs configured for the ITR
                    	**type**\:   :py:class:`ProxyEtrs <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs>`
                    
                    .. attribute:: rloc_probing
                    
                    	RLOC\-probing parameters
                    	**type**\:   :py:class:`RlocProbing <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.RlocProbing>`
                    
                    	**presence node**\: True
                    
                    .. attribute:: servicing_eids
                    
                    	This node defines list of EIDs serviced by the this lisp device
                    	**type**\:   :py:class:`ServicingEids <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids>`
                    
                    .. attribute:: _is_presence
                    
                    	Is present if this instance represents presence container else not
                    	**type**\: bool
                    
                    

                    This class is a :ref:`presence class<presence-class>`

                    """

                    _prefix = 'lisp-itr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self._is_presence = True
                        self.itr_rlocs = None
                        self.map_cache = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache()
                        self.map_cache.parent = self
                        self.map_resolvers = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers()
                        self.map_resolvers.parent = self
                        self.proxy_etrs = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs()
                        self.proxy_etrs.parent = self
                        self.rloc_probing = None
                        self.servicing_eids = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids()
                        self.servicing_eids.parent = self


                    class RlocProbing(object):
                        """
                        RLOC\-probing parameters
                        
                        .. attribute:: interval
                        
                        	Interval in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: seconds
                        
                        .. attribute:: retries
                        
                        	Number of retries
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: retries_interval
                        
                        	Interval in seconds between retries
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: seconds
                        
                        .. attribute:: _is_presence
                        
                        	Is present if this instance represents presence container else not
                        	**type**\: bool
                        
                        

                        This class is a :ref:`presence class<presence-class>`

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self._is_presence = True
                            self.interval = None
                            self.retries = None
                            self.retries_interval = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:rloc-probing'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self._is_presence:
                                return True
                            if self.interval is not None:
                                return True

                            if self.retries is not None:
                                return True

                            if self.retries_interval is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.RlocProbing']['meta_info']


                    class MapResolvers(object):
                        """
                        The Map\-Resolvers configured for the ITR.
                        
                        .. attribute:: map_resolver
                        
                        	List of Map\-Resolvers configured for the ITR
                        	**type**\: list of    :py:class:`MapResolver <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver>`
                        
                        

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.map_resolver = YList()
                            self.map_resolver.parent = self
                            self.map_resolver.name = 'map_resolver'


                        class MapResolver(object):
                            """
                            List of Map\-Resolvers configured for the ITR.
                            
                            .. attribute:: id  <key>
                            
                            	Id of the EID for which the Map\-Server is configured
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	EID for which the Map\-Resolver is configured
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress>`
                            
                            .. attribute:: map_resolver_address
                            
                            	Map\-Resolver RLOC address
                            	**type**\: one of the below types:
                            
                            	**type**\:  list of str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  list of str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            

                            """

                            _prefix = 'lisp-itr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress()
                                self.eid_address.parent = self
                                self.map_resolver_address = YLeafList()
                                self.map_resolver_address.parent = self
                                self.map_resolver_address.name = 'map_resolver_address'


                            class EidAddress(object):
                                """
                                EID for which the Map\-Resolver is configured.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver.EidAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-itr:map-resolver[ietf-lisp-itr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                if self.map_resolver_address is not None:
                                    for child in self.map_resolver_address:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers.MapResolver']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:map-resolvers'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.map_resolver is not None:
                                for child_ref in self.map_resolver:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapResolvers']['meta_info']


                    class ProxyEtrs(object):
                        """
                        Proxy ETRs configured for the ITR.
                        
                        .. attribute:: proxy_etr
                        
                        	List of PETR configured for the ITR
                        	**type**\: list of    :py:class:`ProxyEtr <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr>`
                        
                        

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.proxy_etr = YList()
                            self.proxy_etr.parent = self
                            self.proxy_etr.name = 'proxy_etr'


                        class ProxyEtr(object):
                            """
                            List of PETR configured for the ITR.
                            
                            .. attribute:: id  <key>
                            
                            	Id of the EID for which the PETR is configured
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	EID for which the PETR is configured
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress>`
                            
                            .. attribute:: proxy_etr_address
                            
                            	PETR RLOC address
                            	**type**\: one of the below types:
                            
                            	**type**\:  list of str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  list of str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            

                            """

                            _prefix = 'lisp-itr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress()
                                self.eid_address.parent = self
                                self.proxy_etr_address = YLeafList()
                                self.proxy_etr_address.parent = self
                                self.proxy_etr_address.name = 'proxy_etr_address'


                            class EidAddress(object):
                                """
                                EID for which the PETR is configured.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr.EidAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-itr:proxy-etr[ietf-lisp-itr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                if self.proxy_etr_address is not None:
                                    for child in self.proxy_etr_address:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs.ProxyEtr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:proxy-etrs'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.proxy_etr is not None:
                                for child_ref in self.proxy_etr:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ProxyEtrs']['meta_info']


                    class MapCache(object):
                        """
                        EID to RLOCs mappings cache.
                        
                        .. attribute:: mapping
                        
                        	List of EID to RLOCs mappings
                        	**type**\: list of    :py:class:`Mapping <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping>`
                        
                        

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.mapping = YList()
                            self.mapping.parent = self
                            self.mapping.name = 'mapping'


                        class Mapping(object):
                            """
                            List of EID to RLOCs mappings.
                            
                            .. attribute:: id  <key>
                            
                            	Id that uniquely identifies a mapping
                            	**type**\:  str
                            
                            .. attribute:: authoritative
                            
                            	Bit that indicates if mapping comes from an authoritative source
                            	**type**\:   :py:class:`Authoritative <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Authoritative>`
                            
                            .. attribute:: eid
                            
                            	End\-host Identifier (EID) to be mapped to a list of locators
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid>`
                            
                            .. attribute:: map_reply_action
                            
                            	Forwarding action for a negative mapping
                            	**type**\:   :py:class:`MapReplyActionEnum <ydk.models.ietf.ietf_lisp.MapReplyActionEnum>`
                            
                            .. attribute:: rlocs
                            
                            	List of locators for a positive mapping
                            	**type**\:   :py:class:`Rlocs <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs>`
                            
                            .. attribute:: static
                            
                            	This leaf should be true if the mapping is static
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: ttl
                            
                            	Mapping validity period
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'lisp-itr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.authoritative = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Authoritative()
                                self.eid = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid()
                                self.eid.parent = self
                                self.map_reply_action = None
                                self.rlocs = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs()
                                self.rlocs.parent = self
                                self.static = None
                                self.ttl = None

                            class Authoritative(FixedBitsDict):
                                """
                                Authoritative

                                Bit that indicates if mapping comes from an
                                authoritative source.
                                Keys are:- A

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'A':False,
                                    }
                                    self._pos_map = { 
                                    }


                            class Eid(object):
                                """
                                End\-host Identifier (EID) to be mapped to a list of
                                locators
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Eid']['meta_info']


                            class Rlocs(object):
                                """
                                List of locators for a positive mapping.
                                
                                .. attribute:: locator
                                
                                	List of routing locators
                                	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator>`
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.locator = YList()
                                    self.locator.parent = self
                                    self.locator.name = 'locator'


                                class Locator(object):
                                    """
                                    List of routing locators
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Locator id
                                    	**type**\:  str
                                    
                                    	**length:** 1..64
                                    
                                    .. attribute:: locator_address
                                    
                                    	The locator address provided in LISP canonincal address format
                                    	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress>`
                                    
                                    .. attribute:: multicast_priority
                                    
                                    	Locator's multicast priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: multicast_weight
                                    
                                    	Locator's multicast weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: priority
                                    
                                    	Locator priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: weight
                                    
                                    	Locator weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.locator_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress()
                                        self.locator_address.parent = self
                                        self.multicast_priority = None
                                        self.multicast_weight = None
                                        self.priority = None
                                        self.weight = None


                                    class LocatorAddress(object):
                                        """
                                        The locator address provided in LISP canonincal
                                        address format.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-itr'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-itr:locator-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-itr:locator[ietf-lisp-itr:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.locator_address is not None and self.locator_address._has_data():
                                            return True

                                        if self.multicast_priority is not None:
                                            return True

                                        if self.multicast_weight is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs.Locator']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:rlocs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.locator is not None:
                                        for child_ref in self.locator:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping.Rlocs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-itr:mapping[ietf-lisp-itr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.authoritative is not None:
                                    if self.authoritative._has_data():
                                        return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                if self.map_reply_action is not None:
                                    return True

                                if self.rlocs is not None and self.rlocs._has_data():
                                    return True

                                if self.static is not None:
                                    return True

                                if self.ttl is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache.Mapping']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:map-cache'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mapping is not None:
                                for child_ref in self.mapping:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.MapCache']['meta_info']


                    class ServicingEids(object):
                        """
                        This node defines list of EIDs serviced by the this lisp device.
                        
                        .. attribute:: servicing_eid
                        
                        	List of EIDs serviced by the this lisp device
                        	**type**\: list of    :py:class:`ServicingEid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid>`
                        
                        

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.servicing_eid = YList()
                            self.servicing_eid.parent = self
                            self.servicing_eid.name = 'servicing_eid'


                        class ServicingEid(object):
                            """
                            List of EIDs serviced by the this lisp device.
                            
                            .. attribute:: id  <key>
                            
                            	Id of serviced EID
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	Serviced EID address in generic LISP address format
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress>`
                            
                            

                            """

                            _prefix = 'lisp-itr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress()
                                self.eid_address.parent = self


                            class EidAddress(object):
                                """
                                Serviced EID address in generic LISP address format.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid.EidAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-itr:servicing-eid[ietf-lisp-itr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids.ServicingEid']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:servicing-eids'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.servicing_eid is not None:
                                for child_ref in self.servicing_eid:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg.ServicingEids']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-itr:itr-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self._is_presence:
                            return True
                        if self.itr_rlocs is not None:
                            return True

                        if self.map_cache is not None and self.map_cache._has_data():
                            return True

                        if self.map_resolvers is not None and self.map_resolvers._has_data():
                            return True

                        if self.proxy_etrs is not None and self.proxy_etrs._has_data():
                            return True

                        if self.rloc_probing is not None and self.rloc_probing._has_data():
                            return True

                        if self.servicing_eids is not None and self.servicing_eids._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ItrCfg']['meta_info']


                class MapResolverCfg(object):
                    """
                    Map\-Resolver configuration parameters.
                    
                    .. attribute:: mapping_system_type
                    
                    	A reference to the mapping system
                    	**type**\:   :py:class:`MappingSystemIdentity <ydk.models.ietf.ietf_lisp.MappingSystemIdentity>`
                    
                    .. attribute:: ms_address
                    
                    	address to reach the Map Server when lisp\-mr\:single\-node\-mapping\-system is being used
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'lisp-mr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.mapping_system_type = None
                        self.ms_address = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-mapresolver:map-resolver-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.mapping_system_type is not None:
                            return True

                        if self.ms_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapResolverCfg']['meta_info']


                class MapServerCfg(object):
                    """
                    Map\-Server configuration parameters.
                    
                    .. attribute:: mapping_system_type
                    
                    	A reference to the mapping system
                    	**type**\:   :py:class:`MappingSystemIdentity <ydk.models.ietf.ietf_lisp.MappingSystemIdentity>`
                    
                    .. attribute:: sites
                    
                    	Sites for which the Map\-Server accepts registrations
                    	**type**\:   :py:class:`Sites <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites>`
                    
                    

                    """

                    _prefix = 'lisp-ms'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.mapping_system_type = None
                        self.sites = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites()
                        self.sites.parent = self


                    class Sites(object):
                        """
                        Sites for which the Map\-Server accepts registrations.
                        
                        .. attribute:: site
                        
                        	List of sites for which the Map\-Server acceptes registrations
                        	**type**\: list of    :py:class:`Site <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site>`
                        
                        

                        """

                        _prefix = 'lisp-ms'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.site = YList()
                            self.site.parent = self
                            self.site.name = 'site'


                        class Site(object):
                            """
                            List of sites for which the Map\-Server acceptes
                            registrations.
                            
                            .. attribute:: site_id  <key>
                            
                            	Site identifier
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: auth_key
                            
                            	Site authentication key
                            	**type**\:   :py:class:`AuthKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.AuthKey>`
                            
                            .. attribute:: eids
                            
                            	EIDs registered by device
                            	**type**\:   :py:class:`Eids <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids>`
                            
                            

                            """

                            _prefix = 'lisp-ms'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.site_id = None
                                self.auth_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.AuthKey()
                                self.auth_key.parent = self
                                self.eids = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids()
                                self.eids.parent = self


                            class AuthKey(object):
                                """
                                Site authentication key.
                                
                                .. attribute:: auth_key_type
                                
                                	Authentication key type
                                	**type**\:   :py:class:`AuthKeyTypeEnum <ydk.models.ietf.ietf_lisp.AuthKeyTypeEnum>`
                                
                                .. attribute:: auth_key_value
                                
                                	Clear text authentication key
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'lisp-ms'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.auth_key_type = None
                                    self.auth_key_value = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-mapserver:auth-key'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.auth_key_type is not None:
                                        return True

                                    if self.auth_key_value is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.AuthKey']['meta_info']


                            class Eids(object):
                                """
                                EIDs registered by device.
                                
                                .. attribute:: eid
                                
                                	List of EIDs registered by device
                                	**type**\: list of    :py:class:`Eid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid>`
                                
                                

                                """

                                _prefix = 'lisp-ms'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.eid = YList()
                                    self.eid.parent = self
                                    self.eid.name = 'eid'


                                class Eid(object):
                                    """
                                    List of EIDs registered by device.
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Id of the EID registered
                                    	**type**\:  str
                                    
                                    .. attribute:: eid_address
                                    
                                    	EID in generic LISP address format registered with the Map\-Server
                                    	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress>`
                                    
                                    .. attribute:: mapping_expiration_timeout
                                    
                                    	Time before mapping is expired if no new registrations are received
                                    	**type**\:  int
                                    
                                    	**range:** \-32768..32767
                                    
                                    	**units**\: seconds
                                    
                                    	**default value**\: 180
                                    
                                    .. attribute:: more_specifics_accepted
                                    
                                    	Flag indicating if more specific prefixes can be registered
                                    	**type**\:  bool
                                    
                                    	**default value**\: false
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress()
                                        self.eid_address.parent = self
                                        self.mapping_expiration_timeout = None
                                        self.more_specifics_accepted = None


                                    class EidAddress(object):
                                        """
                                        EID in generic LISP address format registered
                                        with the Map\-Server.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-ms'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-ms'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-mapserver:hop[ietf-lisp-mapserver:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-mapserver:eid-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid.EidAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:eid[ietf-lisp-mapserver:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.eid_address is not None and self.eid_address._has_data():
                                            return True

                                        if self.mapping_expiration_timeout is not None:
                                            return True

                                        if self.more_specifics_accepted is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids.Eid']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-mapserver:eids'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.eid is not None:
                                        for child_ref in self.eid:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site.Eids']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.site_id is None:
                                    raise YPYModelError('Key property site_id is None')

                                return self.parent._common_path +'/ietf-lisp-mapserver:site[ietf-lisp-mapserver:site-id = ' + str(self.site_id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.site_id is not None:
                                    return True

                                if self.auth_key is not None and self.auth_key._has_data():
                                    return True

                                if self.eids is not None and self.eids._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites.Site']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-mapserver:sites'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.site is not None:
                                for child_ref in self.site:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg.Sites']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-mapserver:map-server-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.mapping_system_type is not None:
                            return True

                        if self.sites is not None and self.sites._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.MapServerCfg']['meta_info']


                class ProxyEtrCfg(object):
                    """
                    Proxy ETR configuration parameters.
                    
                    .. attribute:: servicing_eids
                    
                    	This node defines list of EIDs serviced by the this lisp device
                    	**type**\:   :py:class:`ServicingEids <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids>`
                    
                    .. attribute:: _is_presence
                    
                    	Is present if this instance represents presence container else not
                    	**type**\: bool
                    
                    

                    This class is a :ref:`presence class<presence-class>`

                    """

                    _prefix = 'lisp-petr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self._is_presence = True
                        self.servicing_eids = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids()
                        self.servicing_eids.parent = self


                    class ServicingEids(object):
                        """
                        This node defines list of EIDs serviced by the this lisp device.
                        
                        .. attribute:: servicing_eid
                        
                        	List of EIDs serviced by the this lisp device
                        	**type**\: list of    :py:class:`ServicingEid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid>`
                        
                        

                        """

                        _prefix = 'lisp-petr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.servicing_eid = YList()
                            self.servicing_eid.parent = self
                            self.servicing_eid.name = 'servicing_eid'


                        class ServicingEid(object):
                            """
                            List of EIDs serviced by the this lisp device.
                            
                            .. attribute:: id  <key>
                            
                            	Id of serviced EID
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	Serviced EID address in generic LISP address format
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress>`
                            
                            

                            """

                            _prefix = 'lisp-petr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress()
                                self.eid_address.parent = self


                            class EidAddress(object):
                                """
                                Serviced EID address in generic LISP address format.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-petr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-petr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-petr:hop[ietf-lisp-petr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-petr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-petr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-petr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid.EidAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-petr:servicing-eid[ietf-lisp-petr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids.ServicingEid']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-petr:servicing-eids'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.servicing_eid is not None:
                                for child_ref in self.servicing_eid:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg.ServicingEids']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-petr:proxy-etr-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self._is_presence:
                            return True
                        if self.servicing_eids is not None and self.servicing_eids._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyEtrCfg']['meta_info']


                class ProxyItrCfg(object):
                    """
                    Proxy\-ITR configuration parameters.
                    
                    .. attribute:: itr_rlocs
                    
                    	Refrence to a locator set that the PITR includes in Map\-Requests
                    	**type**\:  str
                    
                    	**length:** 1..64
                    
                    	**refers to**\:  :py:class:`locator_set_name <ydk.models.ietf.ietf_lisp.Lisp.LocatorSets.LocatorSet>`
                    
                    .. attribute:: map_cache
                    
                    	EID to RLOCs mappings cache
                    	**type**\:   :py:class:`MapCache <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache>`
                    
                    .. attribute:: map_resolvers
                    
                    	Map\-Resolvers configured for PITR
                    	**type**\:   :py:class:`MapResolvers <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers>`
                    
                    .. attribute:: servicing_eids
                    
                    	This node defines list of EIDs serviced by the this lisp device
                    	**type**\:   :py:class:`ServicingEids <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids>`
                    
                    .. attribute:: _is_presence
                    
                    	Is present if this instance represents presence container else not
                    	**type**\: bool
                    
                    

                    This class is a :ref:`presence class<presence-class>`

                    """

                    _prefix = 'lisp-pitr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self._is_presence = True
                        self.itr_rlocs = None
                        self.map_cache = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache()
                        self.map_cache.parent = self
                        self.map_resolvers = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers()
                        self.map_resolvers.parent = self
                        self.servicing_eids = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids()
                        self.servicing_eids.parent = self


                    class ServicingEids(object):
                        """
                        This node defines list of EIDs serviced by the this lisp device.
                        
                        .. attribute:: servicing_eid
                        
                        	List of EIDs serviced by the this lisp device
                        	**type**\: list of    :py:class:`ServicingEid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid>`
                        
                        

                        """

                        _prefix = 'lisp-pitr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.servicing_eid = YList()
                            self.servicing_eid.parent = self
                            self.servicing_eid.name = 'servicing_eid'


                        class ServicingEid(object):
                            """
                            List of EIDs serviced by the this lisp device.
                            
                            .. attribute:: id  <key>
                            
                            	Id of serviced EID
                            	**type**\:  str
                            
                            .. attribute:: eid_address
                            
                            	Serviced EID address in generic LISP address format
                            	**type**\:   :py:class:`EidAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress>`
                            
                            

                            """

                            _prefix = 'lisp-pitr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.eid_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress()
                                self.eid_address.parent = self


                            class EidAddress(object):
                                """
                                Serviced EID address in generic LISP address format.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:eid-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid.EidAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-pitr:servicing-eid[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.eid_address is not None and self.eid_address._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids.ServicingEid']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-pitr:servicing-eids'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.servicing_eid is not None:
                                for child_ref in self.servicing_eid:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.ServicingEids']['meta_info']


                    class MapResolvers(object):
                        """
                        Map\-Resolvers configured for PITR.
                        
                        .. attribute:: map_resolver
                        
                        	List of Map\-Resolvers configured for PITR
                        	**type**\: list of    :py:class:`MapResolver <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver>`
                        
                        

                        """

                        _prefix = 'lisp-pitr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.map_resolver = YList()
                            self.map_resolver.parent = self
                            self.map_resolver.name = 'map_resolver'


                        class MapResolver(object):
                            """
                            List of Map\-Resolvers configured for PITR.
                            
                            .. attribute:: id  <key>
                            
                            	Id of EID for which the Map\-Resolver is used
                            	**type**\:  str
                            
                            .. attribute:: address
                            
                            	List of Map\-Resolver's addresses
                            	**type**\: one of the below types:
                            
                            	**type**\:  list of str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            	**type**\:  list of str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            
                            ----
                            .. attribute:: eid
                            
                            	EID for which the Map\-Resolver is used
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid>`
                            
                            

                            """

                            _prefix = 'lisp-pitr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.address = YLeafList()
                                self.address.parent = self
                                self.address.name = 'address'
                                self.eid = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid()
                                self.eid.parent = self


                            class Eid(object):
                                """
                                EID for which the Map\-Resolver is used.
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver.Eid']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-pitr:map-resolver[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.address is not None:
                                    for child in self.address:
                                        if child is not None:
                                            return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers.MapResolver']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-pitr:map-resolvers'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.map_resolver is not None:
                                for child_ref in self.map_resolver:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapResolvers']['meta_info']


                    class MapCache(object):
                        """
                        EID to RLOCs mappings cache.
                        
                        .. attribute:: mapping
                        
                        	List of EID to RLOCs mappings
                        	**type**\: list of    :py:class:`Mapping <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping>`
                        
                        

                        """

                        _prefix = 'lisp-pitr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.mapping = YList()
                            self.mapping.parent = self
                            self.mapping.name = 'mapping'


                        class Mapping(object):
                            """
                            List of EID to RLOCs mappings.
                            
                            .. attribute:: id  <key>
                            
                            	Id that uniquely identifies a mapping
                            	**type**\:  str
                            
                            .. attribute:: authoritative
                            
                            	Bit that indicates if mapping comes from an authoritative source
                            	**type**\:   :py:class:`Authoritative <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Authoritative>`
                            
                            .. attribute:: eid
                            
                            	End\-host Identifier (EID) to be mapped to a list of locators
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid>`
                            
                            .. attribute:: map_reply_action
                            
                            	Forwarding action for a negative mapping
                            	**type**\:   :py:class:`MapReplyActionEnum <ydk.models.ietf.ietf_lisp.MapReplyActionEnum>`
                            
                            .. attribute:: rlocs
                            
                            	List of locators for a positive mapping
                            	**type**\:   :py:class:`Rlocs <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs>`
                            
                            .. attribute:: static
                            
                            	This leaf should be true if the mapping is static
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: ttl
                            
                            	Mapping validity period
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'lisp-pitr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.authoritative = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Authoritative()
                                self.eid = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid()
                                self.eid.parent = self
                                self.map_reply_action = None
                                self.rlocs = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs()
                                self.rlocs.parent = self
                                self.static = None
                                self.ttl = None

                            class Authoritative(FixedBitsDict):
                                """
                                Authoritative

                                Bit that indicates if mapping comes from an
                                authoritative source.
                                Keys are:- A

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'A':False,
                                    }
                                    self._pos_map = { 
                                    }


                            class Eid(object):
                                """
                                End\-host Identifier (EID) to be mapped to a list of
                                locators
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Eid']['meta_info']


                            class Rlocs(object):
                                """
                                List of locators for a positive mapping.
                                
                                .. attribute:: locator
                                
                                	List of routing locators
                                	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator>`
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.locator = YList()
                                    self.locator.parent = self
                                    self.locator.name = 'locator'


                                class Locator(object):
                                    """
                                    List of routing locators
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Locator id
                                    	**type**\:  str
                                    
                                    	**length:** 1..64
                                    
                                    .. attribute:: locator_address
                                    
                                    	The locator address provided in LISP canonincal address format
                                    	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress>`
                                    
                                    .. attribute:: multicast_priority
                                    
                                    	Locator's multicast priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: multicast_weight
                                    
                                    	Locator's multicast weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: priority
                                    
                                    	Locator priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: weight
                                    
                                    	Locator weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.locator_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress()
                                        self.locator_address.parent = self
                                        self.multicast_priority = None
                                        self.multicast_weight = None
                                        self.priority = None
                                        self.weight = None


                                    class LocatorAddress(object):
                                        """
                                        The locator address provided in LISP canonincal
                                        address format.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-pitr'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return True

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return True

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-pitr:locator-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return True

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator.LocatorAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-pitr:locator[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return True

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.locator_address is not None and self.locator_address._has_data():
                                            return True

                                        if self.multicast_priority is not None:
                                            return True

                                        if self.multicast_weight is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs.Locator']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:rlocs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return True

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.locator is not None:
                                        for child_ref in self.locator:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping.Rlocs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-pitr:mapping[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return True

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.authoritative is not None:
                                    if self.authoritative._has_data():
                                        return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                if self.map_reply_action is not None:
                                    return True

                                if self.rlocs is not None and self.rlocs._has_data():
                                    return True

                                if self.static is not None:
                                    return True

                                if self.ttl is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache.Mapping']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-pitr:map-cache'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return True

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mapping is not None:
                                for child_ref in self.mapping:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg.MapCache']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-pitr:proxy-itr-cfg'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return True

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self._is_presence:
                            return True
                        if self.itr_rlocs is not None:
                            return True

                        if self.map_cache is not None and self.map_cache._has_data():
                            return True

                        if self.map_resolvers is not None and self.map_resolvers._has_data():
                            return True

                        if self.servicing_eids is not None and self.servicing_eids._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.ProxyItrCfg']['meta_info']


                class PitrState(object):
                    """
                    ITR state.
                    
                    .. attribute:: map_cache
                    
                    	EID to RLOCs mappings cache
                    	**type**\:   :py:class:`MapCache <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache>`
                    
                    

                    """

                    _prefix = 'lisp-pitr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.map_cache = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache()
                        self.map_cache.parent = self


                    class MapCache(object):
                        """
                        EID to RLOCs mappings cache.
                        
                        .. attribute:: mapping
                        
                        	List of EID to RLOCs mappings
                        	**type**\: list of    :py:class:`Mapping <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping>`
                        
                        

                        """

                        _prefix = 'lisp-pitr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.mapping = YList()
                            self.mapping.parent = self
                            self.mapping.name = 'mapping'


                        class Mapping(object):
                            """
                            List of EID to RLOCs mappings.
                            
                            .. attribute:: id  <key>
                            
                            	Id that uniquely identifies a mapping
                            	**type**\:  str
                            
                            .. attribute:: authoritative
                            
                            	Bit that indicates if mapping comes from an authoritative source
                            	**type**\:   :py:class:`Authoritative <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Authoritative>`
                            
                            .. attribute:: eid
                            
                            	End\-host Identifier (EID) to be mapped to a list of locators
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid>`
                            
                            .. attribute:: map_reply_action
                            
                            	Forwarding action for a negative mapping
                            	**type**\:   :py:class:`MapReplyActionEnum <ydk.models.ietf.ietf_lisp.MapReplyActionEnum>`
                            
                            .. attribute:: rlocs
                            
                            	List of locators for a positive mapping
                            	**type**\:   :py:class:`Rlocs <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs>`
                            
                            .. attribute:: static
                            
                            	This leaf should be true if the mapping is static
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: ttl
                            
                            	Mapping validity period
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'lisp-pitr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.authoritative = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Authoritative()
                                self.eid = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid()
                                self.eid.parent = self
                                self.map_reply_action = None
                                self.rlocs = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs()
                                self.rlocs.parent = self
                                self.static = None
                                self.ttl = None

                            class Authoritative(FixedBitsDict):
                                """
                                Authoritative

                                Bit that indicates if mapping comes from an
                                authoritative source.
                                Keys are:- A

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'A':False,
                                    }
                                    self._pos_map = { 
                                    }


                            class Eid(object):
                                """
                                End\-host Identifier (EID) to be mapped to a list of
                                locators
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Eid']['meta_info']


                            class Rlocs(object):
                                """
                                List of locators for a positive mapping.
                                
                                .. attribute:: locator
                                
                                	List of routing locators
                                	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator>`
                                
                                

                                """

                                _prefix = 'lisp-pitr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.locator = YList()
                                    self.locator.parent = self
                                    self.locator.name = 'locator'


                                class Locator(object):
                                    """
                                    List of routing locators
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Locator id
                                    	**type**\:  str
                                    
                                    	**length:** 1..64
                                    
                                    .. attribute:: locator_address
                                    
                                    	The locator address provided in LISP canonincal address format
                                    	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress>`
                                    
                                    .. attribute:: multicast_priority
                                    
                                    	Locator's multicast priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: multicast_weight
                                    
                                    	Locator's multicast weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: priority
                                    
                                    	Locator priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: weight
                                    
                                    	Locator weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-pitr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.locator_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress()
                                        self.locator_address.parent = self
                                        self.multicast_priority = None
                                        self.multicast_weight = None
                                        self.priority = None
                                        self.weight = None


                                    class LocatorAddress(object):
                                        """
                                        The locator address provided in LISP canonincal
                                        address format.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-pitr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-pitr'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-pitr:hop[ietf-lisp-pitr:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-pitr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-pitr:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-pitr:locator-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-pitr:locator[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.locator_address is not None and self.locator_address._has_data():
                                            return True

                                        if self.multicast_priority is not None:
                                            return True

                                        if self.multicast_weight is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs.Locator']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-pitr:rlocs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.locator is not None:
                                        for child_ref in self.locator:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping.Rlocs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-pitr:mapping[ietf-lisp-pitr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.authoritative is not None:
                                    if self.authoritative._has_data():
                                        return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                if self.map_reply_action is not None:
                                    return True

                                if self.rlocs is not None and self.rlocs._has_data():
                                    return True

                                if self.static is not None:
                                    return True

                                if self.ttl is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache.Mapping']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-pitr:map-cache'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mapping is not None:
                                for child_ref in self.mapping:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState.MapCache']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-pitr:pitr-state'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.map_cache is not None and self.map_cache._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole.PitrState']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.lisp_role_type is None:
                        raise YPYModelError('Key property lisp_role_type is None')

                    return self.parent._common_path +'/ietf-lisp:lisp-role[ietf-lisp:lisp-role-type = ' + str(self.lisp_role_type) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return True

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.lisp_role_type is not None:
                        return True

                    if self.enabled is not None:
                        return True

                    if self.etr_cfg is not None and self.etr_cfg._has_data():
                        return True

                    if self.itr_cfg is not None and self.itr_cfg._has_data():
                        return True

                    if self.map_resolver_cfg is not None and self.map_resolver_cfg._has_data():
                        return True

                    if self.map_server_cfg is not None and self.map_server_cfg._has_data():
                        return True

                    if self.pitr_state is not None and self.pitr_state._has_data():
                        return True

                    if self.proxy_etr_cfg is not None and self.proxy_etr_cfg._has_data():
                        return True

                    if self.proxy_itr_cfg is not None and self.proxy_itr_cfg._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.ietf._meta import _ietf_lisp as meta
                    return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance.LispRole']['meta_info']

            @property
            def _common_path(self):
                if self.lisp_router_instance_id is None:
                    raise YPYModelError('Key property lisp_router_instance_id is None')

                return '/ietf-lisp:lisp/ietf-lisp:lisp-router-instances/ietf-lisp:lisp-router-instance[ietf-lisp:lisp-router-instance-id = ' + str(self.lisp_router_instance_id) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return True

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.lisp_router_instance_id is not None:
                    return True

                if self.lisp_role is not None:
                    for child_ref in self.lisp_role:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.ietf._meta import _ietf_lisp as meta
                return meta._meta_table['Lisp.LispRouterInstances.LispRouterInstance']['meta_info']

        @property
        def _common_path(self):

            return '/ietf-lisp:lisp/ietf-lisp:lisp-router-instances'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return True

        def _has_data(self):
            if not self.is_config():
                return False
            if self.lisp_router_instance is not None:
                for child_ref in self.lisp_router_instance:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.ietf._meta import _ietf_lisp as meta
            return meta._meta_table['Lisp.LispRouterInstances']['meta_info']

    @property
    def _common_path(self):

        return '/ietf-lisp:lisp'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return True

    def _has_data(self):
        if not self.is_config():
            return False
        if self.lisp_router_instances is not None and self.lisp_router_instances._has_data():
            return True

        if self.locator_sets is not None and self.locator_sets._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['Lisp']['meta_info']


class LispState(object):
    """
    Operational state of the LISP subsystem.
    
    .. attribute:: lisp_router_instances
    
    	Configuration of LISP router instances
    	**type**\:   :py:class:`LispRouterInstances <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances>`
    
    

    """

    _prefix = 'lisp'
    _revision = '2016-06-30'

    def __init__(self):
        self.lisp_router_instances = LispState.LispRouterInstances()
        self.lisp_router_instances.parent = self


    class LispRouterInstances(object):
        """
        Configuration of LISP router instances.
        
        .. attribute:: lisp_router_instance
        
        	Each entry contains configuration of a lisp\-router instance
        	**type**\: list of    :py:class:`LispRouterInstance <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance>`
        
        

        """

        _prefix = 'lisp'
        _revision = '2016-06-30'

        def __init__(self):
            self.parent = None
            self.lisp_router_instance = YList()
            self.lisp_router_instance.parent = self
            self.lisp_router_instance.name = 'lisp_router_instance'


        class LispRouterInstance(object):
            """
            Each entry contains configuration of a lisp\-router
            instance.
            
            .. attribute:: lisp_router_instance_id  <key>
            
            	Arbitrary lisp\-router id
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: lisp_role
            
            	List of lisp device roles such as MS, MR, ITR, ETR, RTR
            	**type**\: list of    :py:class:`LispRole <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole>`
            
            

            """

            _prefix = 'lisp'
            _revision = '2016-06-30'

            def __init__(self):
                self.parent = None
                self.lisp_router_instance_id = None
                self.lisp_role = YList()
                self.lisp_role.parent = self
                self.lisp_role.name = 'lisp_role'


            class LispRole(object):
                """
                List of lisp device roles such as MS, MR, ITR,
                ETR, RTR.
                
                .. attribute:: lisp_role_type  <key>
                
                	The type of LISP device \- identity derived from the 'lisp\-device' base identity
                	**type**\:   :py:class:`LispRoleIdentity <ydk.models.ietf.ietf_lisp.LispRoleIdentity>`
                
                .. attribute:: enabled
                
                	Enable/disable the lisp\-role
                	**type**\:  bool
                
                	**default value**\: true
                
                .. attribute:: itr_state
                
                	ITR state
                	**type**\:   :py:class:`ItrState <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState>`
                
                .. attribute:: ms_state
                
                	Map\-Server state
                	**type**\:   :py:class:`MsState <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState>`
                
                

                """

                _prefix = 'lisp'
                _revision = '2016-06-30'

                def __init__(self):
                    self.parent = None
                    self.lisp_role_type = None
                    self.enabled = None
                    self.itr_state = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState()
                    self.itr_state.parent = self
                    self.ms_state = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState()
                    self.ms_state.parent = self


                class ItrState(object):
                    """
                    ITR state.
                    
                    .. attribute:: map_cache
                    
                    	EID to RLOCs mappings cache
                    	**type**\:   :py:class:`MapCache <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache>`
                    
                    

                    """

                    _prefix = 'lisp-itr'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.map_cache = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache()
                        self.map_cache.parent = self


                    class MapCache(object):
                        """
                        EID to RLOCs mappings cache.
                        
                        .. attribute:: mapping
                        
                        	List of EID to RLOCs mappings
                        	**type**\: list of    :py:class:`Mapping <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping>`
                        
                        

                        """

                        _prefix = 'lisp-itr'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.mapping = YList()
                            self.mapping.parent = self
                            self.mapping.name = 'mapping'


                        class Mapping(object):
                            """
                            List of EID to RLOCs mappings.
                            
                            .. attribute:: id  <key>
                            
                            	Id that uniquely identifies a mapping
                            	**type**\:  str
                            
                            .. attribute:: authoritative
                            
                            	Bit that indicates if mapping comes from an authoritative source
                            	**type**\:   :py:class:`Authoritative <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Authoritative>`
                            
                            .. attribute:: eid
                            
                            	End\-host Identifier (EID) to be mapped to a list of locators
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid>`
                            
                            .. attribute:: map_reply_action
                            
                            	Forwarding action for a negative mapping
                            	**type**\:   :py:class:`MapReplyActionEnum <ydk.models.ietf.ietf_lisp.MapReplyActionEnum>`
                            
                            .. attribute:: rlocs
                            
                            	List of locators for a positive mapping
                            	**type**\:   :py:class:`Rlocs <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs>`
                            
                            .. attribute:: static
                            
                            	This leaf should be true if the mapping is static
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: ttl
                            
                            	Mapping validity period
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'lisp-itr'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.authoritative = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Authoritative()
                                self.eid = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid()
                                self.eid.parent = self
                                self.map_reply_action = None
                                self.rlocs = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs()
                                self.rlocs.parent = self
                                self.static = None
                                self.ttl = None

                            class Authoritative(FixedBitsDict):
                                """
                                Authoritative

                                Bit that indicates if mapping comes from an
                                authoritative source.
                                Keys are:- A

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'A':False,
                                    }
                                    self._pos_map = { 
                                    }


                            class Eid(object):
                                """
                                End\-host Identifier (EID) to be mapped to a list of
                                locators
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Eid']['meta_info']


                            class Rlocs(object):
                                """
                                List of locators for a positive mapping.
                                
                                .. attribute:: locator
                                
                                	List of routing locators
                                	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator>`
                                
                                

                                """

                                _prefix = 'lisp-itr'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.locator = YList()
                                    self.locator.parent = self
                                    self.locator.name = 'locator'


                                class Locator(object):
                                    """
                                    List of routing locators
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Locator id
                                    	**type**\:  str
                                    
                                    	**length:** 1..64
                                    
                                    .. attribute:: locator_address
                                    
                                    	The locator address provided in LISP canonincal address format
                                    	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress>`
                                    
                                    .. attribute:: multicast_priority
                                    
                                    	Locator's multicast priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: multicast_weight
                                    
                                    	Locator's multicast weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: priority
                                    
                                    	Locator priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: weight
                                    
                                    	Locator weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-itr'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.locator_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress()
                                        self.locator_address.parent = self
                                        self.multicast_priority = None
                                        self.multicast_weight = None
                                        self.priority = None
                                        self.weight = None


                                    class LocatorAddress(object):
                                        """
                                        The locator address provided in LISP canonincal
                                        address format.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-itr'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-itr'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-itr:hop[ietf-lisp-itr:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-itr'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-itr:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-itr:locator-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator.LocatorAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-itr:locator[ietf-lisp-itr:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.locator_address is not None and self.locator_address._has_data():
                                            return True

                                        if self.multicast_priority is not None:
                                            return True

                                        if self.multicast_weight is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs.Locator']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-itr:rlocs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.locator is not None:
                                        for child_ref in self.locator:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping.Rlocs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-itr:mapping[ietf-lisp-itr:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.authoritative is not None:
                                    if self.authoritative._has_data():
                                        return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                if self.map_reply_action is not None:
                                    return True

                                if self.rlocs is not None and self.rlocs._has_data():
                                    return True

                                if self.static is not None:
                                    return True

                                if self.ttl is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache.Mapping']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-itr:map-cache'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mapping is not None:
                                for child_ref in self.mapping:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState.MapCache']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-itr:itr-state'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.map_cache is not None and self.map_cache._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.ItrState']['meta_info']


                class MsState(object):
                    """
                    Map\-Server state.
                    
                    .. attribute:: registered_mappings
                    
                    	Datastore of registred mappings
                    	**type**\:   :py:class:`RegisteredMappings <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings>`
                    
                    

                    """

                    _prefix = 'lisp-ms'
                    _revision = '2016-06-30'

                    def __init__(self):
                        self.parent = None
                        self.registered_mappings = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings()
                        self.registered_mappings.parent = self


                    class RegisteredMappings(object):
                        """
                        Datastore of registred mappings.
                        
                        .. attribute:: mapping
                        
                        	List of EID to RLOCs mappings
                        	**type**\: list of    :py:class:`Mapping <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping>`
                        
                        

                        """

                        _prefix = 'lisp-ms'
                        _revision = '2016-06-30'

                        def __init__(self):
                            self.parent = None
                            self.mapping = YList()
                            self.mapping.parent = self
                            self.mapping.name = 'mapping'


                        class Mapping(object):
                            """
                            List of EID to RLOCs mappings.
                            
                            .. attribute:: id  <key>
                            
                            	Id that uniquely identifies a mapping
                            	**type**\:  str
                            
                            .. attribute:: authoritative
                            
                            	Bit that indicates if mapping comes from an authoritative source
                            	**type**\:   :py:class:`Authoritative <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Authoritative>`
                            
                            .. attribute:: eid
                            
                            	End\-host Identifier (EID) to be mapped to a list of locators
                            	**type**\:   :py:class:`Eid <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid>`
                            
                            .. attribute:: map_reply_action
                            
                            	Forwarding action for a negative mapping
                            	**type**\:   :py:class:`MapReplyActionEnum <ydk.models.ietf.ietf_lisp.MapReplyActionEnum>`
                            
                            .. attribute:: rlocs
                            
                            	List of locators for a positive mapping
                            	**type**\:   :py:class:`Rlocs <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs>`
                            
                            .. attribute:: static
                            
                            	This leaf should be true if the mapping is static
                            	**type**\:  bool
                            
                            	**default value**\: false
                            
                            .. attribute:: ttl
                            
                            	Mapping validity period
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'lisp-ms'
                            _revision = '2016-06-30'

                            def __init__(self):
                                self.parent = None
                                self.id = None
                                self.authoritative = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Authoritative()
                                self.eid = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid()
                                self.eid.parent = self
                                self.map_reply_action = None
                                self.rlocs = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs()
                                self.rlocs.parent = self
                                self.static = None
                                self.ttl = None

                            class Authoritative(FixedBitsDict):
                                """
                                Authoritative

                                Bit that indicates if mapping comes from an
                                authoritative source.
                                Keys are:- A

                                """

                                def __init__(self):
                                    self._dictionary = { 
                                        'A':False,
                                    }
                                    self._pos_map = { 
                                    }


                            class Eid(object):
                                """
                                End\-host Identifier (EID) to be mapped to a list of
                                locators
                                
                                .. attribute:: address_type
                                
                                	Type of the LISP address
                                	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                
                                	**mandatory**\: True
                                
                                .. attribute:: afi_list
                                
                                	AFI\-List LCAF type
                                	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AfiList>`
                                
                                .. attribute:: application_data
                                
                                	Application Data LCAF type
                                	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ApplicationData>`
                                
                                .. attribute:: as_number
                                
                                	AS Number
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: as_number_lcaf
                                
                                	AS Number LCAF type
                                	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AsNumberLcaf>`
                                
                                .. attribute:: distinguished_name
                                
                                	Distinguished Name address
                                	**type**\:  str
                                
                                .. attribute:: explicit_locator_path
                                
                                	Explicit Locator Path LCAF type
                                	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath>`
                                
                                .. attribute:: geo_coordinates
                                
                                	Geo\-coordinates LCAF type
                                	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates>`
                                
                                .. attribute:: instance_id
                                
                                	Instance ID LCAF type
                                	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.InstanceId>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv4_prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_prefix
                                
                                	IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                
                                .. attribute:: key_value_address
                                
                                	Key/Value Address LCAF type
                                	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.KeyValueAddress>`
                                
                                .. attribute:: mac
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                .. attribute:: nat_traversal
                                
                                	NAT\-Traversal LCAF type
                                	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NatTraversal>`
                                
                                .. attribute:: no_address
                                
                                	No address
                                	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                
                                .. attribute:: null_address
                                
                                	Null body LCAF type
                                	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NullAddress>`
                                
                                .. attribute:: service_path
                                
                                	Service Path LCAF type
                                	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ServicePath>`
                                
                                .. attribute:: source_dest_key
                                
                                	Source/Dest LCAF type
                                	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.SourceDestKey>`
                                
                                .. attribute:: virtual_network_id
                                
                                	Virtual Network Identifier (instance\-id) of the address
                                	**type**\:  int
                                
                                	**range:** 0..16777215
                                
                                

                                """

                                _prefix = 'lisp-ms'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.address_type = None
                                    self.afi_list = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AfiList()
                                    self.afi_list.parent = self
                                    self.application_data = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ApplicationData()
                                    self.application_data.parent = self
                                    self.as_number = None
                                    self.as_number_lcaf = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AsNumberLcaf()
                                    self.as_number_lcaf.parent = self
                                    self.distinguished_name = None
                                    self.explicit_locator_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath()
                                    self.explicit_locator_path.parent = self
                                    self.geo_coordinates = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates()
                                    self.geo_coordinates.parent = self
                                    self.instance_id = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.InstanceId()
                                    self.instance_id.parent = self
                                    self.ipv4 = None
                                    self.ipv4_prefix = None
                                    self.ipv6 = None
                                    self.ipv6_prefix = None
                                    self.key_value_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.KeyValueAddress()
                                    self.key_value_address.parent = self
                                    self.mac = None
                                    self.nat_traversal = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NatTraversal()
                                    self.nat_traversal.parent = self
                                    self.no_address = None
                                    self.null_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NullAddress()
                                    self.null_address.parent = self
                                    self.service_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ServicePath()
                                    self.service_path.parent = self
                                    self.source_dest_key = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.SourceDestKey()
                                    self.source_dest_key.parent = self
                                    self.virtual_network_id = None


                                class NullAddress(object):
                                    """
                                    Null body LCAF type
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:null-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NullAddress']['meta_info']


                                class AfiList(object):
                                    """
                                    AFI\-List LCAF type.
                                    
                                    .. attribute:: address_list
                                    
                                    	List of AFI addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address_list = YLeafList()
                                        self.address_list.parent = self
                                        self.address_list.name = 'address_list'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:afi-list'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address_list is not None:
                                            for child in self.address_list:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AfiList']['meta_info']


                                class InstanceId(object):
                                    """
                                    Instance ID LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: iid
                                    
                                    	Instance ID value
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    .. attribute:: mask_length
                                    
                                    	Mask length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.iid = None
                                        self.mask_length = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:instance-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.iid is not None:
                                            return True

                                        if self.mask_length is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.InstanceId']['meta_info']


                                class AsNumberLcaf(object):
                                    """
                                    AS Number LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: as_
                                    
                                    	AS number
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.as_ = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:as-number-lcaf'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.as_ is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.AsNumberLcaf']['meta_info']


                                class ApplicationData(object):
                                    """
                                    Application Data LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ip_tos
                                    
                                    	Type of service field
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: local_port_high
                                    
                                    	High end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: local_port_low
                                    
                                    	Low end of local port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: protocol
                                    
                                    	Protocol number
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: remote_port_high
                                    
                                    	High end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: remote_port_low
                                    
                                    	Low end of remote port range
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.ip_tos = None
                                        self.local_port_high = None
                                        self.local_port_low = None
                                        self.protocol = None
                                        self.remote_port_high = None
                                        self.remote_port_low = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:application-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.ip_tos is not None:
                                            return True

                                        if self.local_port_high is not None:
                                            return True

                                        if self.local_port_low is not None:
                                            return True

                                        if self.protocol is not None:
                                            return True

                                        if self.remote_port_high is not None:
                                            return True

                                        if self.remote_port_low is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ApplicationData']['meta_info']


                                class GeoCoordinates(object):
                                    """
                                    Geo\-coordinates LCAF type.
                                    
                                    .. attribute:: address
                                    
                                    	AFI address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: altitude
                                    
                                    	Height relative to sea level in meters
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: latitude
                                    
                                    	Bit that selects between North and South latitude
                                    	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates.Latitude>`
                                    
                                    .. attribute:: latitude_degrees
                                    
                                    	Degrees of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..90
                                    
                                    .. attribute:: latitude_minutes
                                    
                                    	Minutes of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: latitude_seconds
                                    
                                    	Seconds of latitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude
                                    
                                    	Bit that selects between East and West longitude
                                    	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates.Longitude>`
                                    
                                    .. attribute:: longitude_degrees
                                    
                                    	Degrees of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..180
                                    
                                    .. attribute:: longitude_minutes
                                    
                                    	Minutes of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    .. attribute:: longitude_seconds
                                    
                                    	Seconds of longitude
                                    	**type**\:  int
                                    
                                    	**range:** 0..59
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None
                                        self.altitude = None
                                        self.latitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates.Latitude()
                                        self.latitude_degrees = None
                                        self.latitude_minutes = None
                                        self.latitude_seconds = None
                                        self.longitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates.Longitude()
                                        self.longitude_degrees = None
                                        self.longitude_minutes = None
                                        self.longitude_seconds = None

                                    class Latitude(FixedBitsDict):
                                        """
                                        Latitude

                                        Bit that selects between North and South latitude.
                                        Keys are:- N

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'N':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    class Longitude(FixedBitsDict):
                                        """
                                        Longitude

                                        Bit that selects between East and West longitude.
                                        Keys are:- E

                                        """

                                        def __init__(self):
                                            self._dictionary = { 
                                                'E':False,
                                            }
                                            self._pos_map = { 
                                            }

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:geo-coordinates'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        if self.altitude is not None:
                                            return True

                                        if self.latitude is not None:
                                            if self.latitude._has_data():
                                                return True

                                        if self.latitude_degrees is not None:
                                            return True

                                        if self.latitude_minutes is not None:
                                            return True

                                        if self.latitude_seconds is not None:
                                            return True

                                        if self.longitude is not None:
                                            if self.longitude._has_data():
                                                return True

                                        if self.longitude_degrees is not None:
                                            return True

                                        if self.longitude_minutes is not None:
                                            return True

                                        if self.longitude_seconds is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.GeoCoordinates']['meta_info']


                                class NatTraversal(object):
                                    """
                                    NAT\-Traversal LCAF type.
                                    
                                    .. attribute:: etr_udp_port
                                    
                                    	ETR UDP port
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: global_etr_rloc
                                    
                                    	Global ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_rloc
                                    
                                    	Map\-Server RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: ms_udp_port
                                    
                                    	Map\-Server UDP port (set to 4342)
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: private_etr_rloc
                                    
                                    	Private ETR RLOC address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: rtr_rlocs
                                    
                                    	List of RTR RLOC addresses
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  list of str
                                    
                                    
                                    ----
                                    	**type**\:  list of int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.etr_udp_port = None
                                        self.global_etr_rloc = None
                                        self.ms_rloc = None
                                        self.ms_udp_port = None
                                        self.private_etr_rloc = None
                                        self.rtr_rlocs = YLeafList()
                                        self.rtr_rlocs.parent = self
                                        self.rtr_rlocs.name = 'rtr_rlocs'

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:nat-traversal'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.etr_udp_port is not None:
                                            return True

                                        if self.global_etr_rloc is not None:
                                            return True

                                        if self.ms_rloc is not None:
                                            return True

                                        if self.ms_udp_port is not None:
                                            return True

                                        if self.private_etr_rloc is not None:
                                            return True

                                        if self.rtr_rlocs is not None:
                                            for child in self.rtr_rlocs:
                                                if child is not None:
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.NatTraversal']['meta_info']


                                class ExplicitLocatorPath(object):
                                    """
                                    Explicit Locator Path LCAF type.
                                    
                                    .. attribute:: hop
                                    
                                    	List of locator hops forming the explicit path
                                    	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath.Hop>`
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.hop = YList()
                                        self.hop.parent = self
                                        self.hop.name = 'hop'


                                    class Hop(object):
                                        """
                                        List of locator hops forming the explicit path.
                                        
                                        .. attribute:: hop_id  <key>
                                        
                                        	Unique identifier for the hop
                                        	**type**\:  str
                                        
                                        	**length:** 1..64
                                        
                                        .. attribute:: address
                                        
                                        	AFI address
                                        	**type**\: one of the below types:
                                        
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        
                                        ----
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        
                                        ----
                                        	**type**\:  str
                                        
                                        
                                        ----
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        
                                        ----
                                        .. attribute:: lrs_bits
                                        
                                        	Flag bits per hop
                                        	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits>`
                                        
                                        

                                        """

                                        _prefix = 'lisp-ms'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.hop_id = None
                                            self.address = None
                                            self.lrs_bits = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath.Hop.LrsBits()

                                        class LrsBits(FixedBitsDict):
                                            """
                                            LrsBits

                                            Flag bits per hop.
                                            Keys are:- strict , rloc\-probe , lookup

                                            """

                                            def __init__(self):
                                                self._dictionary = { 
                                                    'strict':False,
                                                    'rloc-probe':False,
                                                    'lookup':False,
                                                }
                                                self._pos_map = { 
                                                }

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')
                                            if self.hop_id is None:
                                                raise YPYModelError('Key property hop_id is None')

                                            return self.parent._common_path +'/ietf-lisp-mapserver:hop[ietf-lisp-mapserver:hop-id = ' + str(self.hop_id) + ']'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.hop_id is not None:
                                                return True

                                            if self.address is not None:
                                                return True

                                            if self.lrs_bits is not None:
                                                if self.lrs_bits._has_data():
                                                    return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath.Hop']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:explicit-locator-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.hop is not None:
                                            for child_ref in self.hop:
                                                if child_ref._has_data():
                                                    return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ExplicitLocatorPath']['meta_info']


                                class SourceDestKey(object):
                                    """
                                    Source/Dest LCAF type.
                                    
                                    .. attribute:: dest
                                    
                                    	Destination address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: source
                                    
                                    	Source address
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest = None
                                        self.source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:source-dest-key'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.SourceDestKey']['meta_info']


                                class KeyValueAddress(object):
                                    """
                                    Key/Value Address LCAF type.
                                    
                                    .. attribute:: key
                                    
                                    	Address as Key
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    .. attribute:: value
                                    
                                    	Address as Value
                                    	**type**\: one of the below types:
                                    
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                    
                                    
                                    ----
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    
                                    ----
                                    	**type**\:  str
                                    
                                    
                                    ----
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    
                                    ----
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.key = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:key-value-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.key is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.KeyValueAddress']['meta_info']


                                class ServicePath(object):
                                    """
                                    Service Path LCAF type.
                                    
                                    .. attribute:: service_index
                                    
                                    	Service path index for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: service_path_id
                                    
                                    	Service path identifier for the path for NSH header
                                    	**type**\:  int
                                    
                                    	**range:** 0..16777215
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.service_index = None
                                        self.service_path_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:service-path'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.service_index is not None:
                                            return True

                                        if self.service_path_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid.ServicePath']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-mapserver:eid'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address_type is not None:
                                        return True

                                    if self.afi_list is not None and self.afi_list._has_data():
                                        return True

                                    if self.application_data is not None and self.application_data._has_data():
                                        return True

                                    if self.as_number is not None:
                                        return True

                                    if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                        return True

                                    if self.distinguished_name is not None:
                                        return True

                                    if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                        return True

                                    if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                        return True

                                    if self.instance_id is not None and self.instance_id._has_data():
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv4_prefix is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    if self.ipv6_prefix is not None:
                                        return True

                                    if self.key_value_address is not None and self.key_value_address._has_data():
                                        return True

                                    if self.mac is not None:
                                        return True

                                    if self.nat_traversal is not None and self.nat_traversal._has_data():
                                        return True

                                    if self.no_address is not None:
                                        return True

                                    if self.null_address is not None and self.null_address._has_data():
                                        return True

                                    if self.service_path is not None and self.service_path._has_data():
                                        return True

                                    if self.source_dest_key is not None and self.source_dest_key._has_data():
                                        return True

                                    if self.virtual_network_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Eid']['meta_info']


                            class Rlocs(object):
                                """
                                List of locators for a positive mapping.
                                
                                .. attribute:: locator
                                
                                	List of routing locators
                                	**type**\: list of    :py:class:`Locator <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator>`
                                
                                

                                """

                                _prefix = 'lisp-ms'
                                _revision = '2016-06-30'

                                def __init__(self):
                                    self.parent = None
                                    self.locator = YList()
                                    self.locator.parent = self
                                    self.locator.name = 'locator'


                                class Locator(object):
                                    """
                                    List of routing locators
                                    
                                    .. attribute:: id  <key>
                                    
                                    	Locator id
                                    	**type**\:  str
                                    
                                    	**length:** 1..64
                                    
                                    .. attribute:: locator_address
                                    
                                    	The locator address provided in LISP canonincal address format
                                    	**type**\:   :py:class:`LocatorAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress>`
                                    
                                    .. attribute:: multicast_priority
                                    
                                    	Locator's multicast priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: multicast_weight
                                    
                                    	Locator's multicast weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: priority
                                    
                                    	Locator priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: weight
                                    
                                    	Locator weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'lisp-ms'
                                    _revision = '2016-06-30'

                                    def __init__(self):
                                        self.parent = None
                                        self.id = None
                                        self.locator_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress()
                                        self.locator_address.parent = self
                                        self.multicast_priority = None
                                        self.multicast_weight = None
                                        self.priority = None
                                        self.weight = None


                                    class LocatorAddress(object):
                                        """
                                        The locator address provided in LISP canonincal
                                        address format.
                                        
                                        .. attribute:: address_type
                                        
                                        	Type of the LISP address
                                        	**type**\:   :py:class:`LispAddressFamilyIdentity <ydk.models.ietf.ietf_lisp_address_types.LispAddressFamilyIdentity>`
                                        
                                        	**mandatory**\: True
                                        
                                        .. attribute:: afi_list
                                        
                                        	AFI\-List LCAF type
                                        	**type**\:   :py:class:`AfiList <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AfiList>`
                                        
                                        .. attribute:: application_data
                                        
                                        	Application Data LCAF type
                                        	**type**\:   :py:class:`ApplicationData <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData>`
                                        
                                        .. attribute:: as_number
                                        
                                        	AS Number
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: as_number_lcaf
                                        
                                        	AS Number LCAF type
                                        	**type**\:   :py:class:`AsNumberLcaf <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf>`
                                        
                                        .. attribute:: distinguished_name
                                        
                                        	Distinguished Name address
                                        	**type**\:  str
                                        
                                        .. attribute:: explicit_locator_path
                                        
                                        	Explicit Locator Path LCAF type
                                        	**type**\:   :py:class:`ExplicitLocatorPath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath>`
                                        
                                        .. attribute:: geo_coordinates
                                        
                                        	Geo\-coordinates LCAF type
                                        	**type**\:   :py:class:`GeoCoordinates <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates>`
                                        
                                        .. attribute:: instance_id
                                        
                                        	Instance ID LCAF type
                                        	**type**\:   :py:class:`InstanceId <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.InstanceId>`
                                        
                                        .. attribute:: ipv4
                                        
                                        	IPv4 address
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv4_prefix
                                        
                                        	IPv4 prefix
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                        
                                        .. attribute:: ipv6
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: ipv6_prefix
                                        
                                        	IPv6 address
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                        
                                        .. attribute:: key_value_address
                                        
                                        	Key/Value Address LCAF type
                                        	**type**\:   :py:class:`KeyValueAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress>`
                                        
                                        .. attribute:: mac
                                        
                                        	MAC address
                                        	**type**\:  str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        .. attribute:: nat_traversal
                                        
                                        	NAT\-Traversal LCAF type
                                        	**type**\:   :py:class:`NatTraversal <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal>`
                                        
                                        .. attribute:: no_address
                                        
                                        	No address
                                        	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                        
                                        .. attribute:: null_address
                                        
                                        	Null body LCAF type
                                        	**type**\:   :py:class:`NullAddress <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NullAddress>`
                                        
                                        .. attribute:: service_path
                                        
                                        	Service Path LCAF type
                                        	**type**\:   :py:class:`ServicePath <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ServicePath>`
                                        
                                        .. attribute:: source_dest_key
                                        
                                        	Source/Dest LCAF type
                                        	**type**\:   :py:class:`SourceDestKey <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey>`
                                        
                                        .. attribute:: virtual_network_id
                                        
                                        	Virtual Network Identifier (instance\-id) of the address
                                        	**type**\:  int
                                        
                                        	**range:** 0..16777215
                                        
                                        

                                        """

                                        _prefix = 'lisp-ms'
                                        _revision = '2016-06-30'

                                        def __init__(self):
                                            self.parent = None
                                            self.address_type = None
                                            self.afi_list = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AfiList()
                                            self.afi_list.parent = self
                                            self.application_data = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData()
                                            self.application_data.parent = self
                                            self.as_number = None
                                            self.as_number_lcaf = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf()
                                            self.as_number_lcaf.parent = self
                                            self.distinguished_name = None
                                            self.explicit_locator_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath()
                                            self.explicit_locator_path.parent = self
                                            self.geo_coordinates = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates()
                                            self.geo_coordinates.parent = self
                                            self.instance_id = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.InstanceId()
                                            self.instance_id.parent = self
                                            self.ipv4 = None
                                            self.ipv4_prefix = None
                                            self.ipv6 = None
                                            self.ipv6_prefix = None
                                            self.key_value_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress()
                                            self.key_value_address.parent = self
                                            self.mac = None
                                            self.nat_traversal = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal()
                                            self.nat_traversal.parent = self
                                            self.no_address = None
                                            self.null_address = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NullAddress()
                                            self.null_address.parent = self
                                            self.service_path = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ServicePath()
                                            self.service_path.parent = self
                                            self.source_dest_key = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey()
                                            self.source_dest_key.parent = self
                                            self.virtual_network_id = None


                                        class NullAddress(object):
                                            """
                                            Null body LCAF type
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\:  :py:class:`Empty<ydk.types.Empty>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:null-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NullAddress']['meta_info']


                                        class AfiList(object):
                                            """
                                            AFI\-List LCAF type.
                                            
                                            .. attribute:: address_list
                                            
                                            	List of AFI addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address_list = YLeafList()
                                                self.address_list.parent = self
                                                self.address_list.name = 'address_list'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:afi-list'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address_list is not None:
                                                    for child in self.address_list:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AfiList']['meta_info']


                                        class InstanceId(object):
                                            """
                                            Instance ID LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: iid
                                            
                                            	Instance ID value
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            .. attribute:: mask_length
                                            
                                            	Mask length
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.iid = None
                                                self.mask_length = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:instance-id'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.iid is not None:
                                                    return True

                                                if self.mask_length is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.InstanceId']['meta_info']


                                        class AsNumberLcaf(object):
                                            """
                                            AS Number LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: as_
                                            
                                            	AS number
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.as_ = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:as-number-lcaf'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.as_ is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.AsNumberLcaf']['meta_info']


                                        class ApplicationData(object):
                                            """
                                            Application Data LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ip_tos
                                            
                                            	Type of service field
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: local_port_high
                                            
                                            	High end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: local_port_low
                                            
                                            	Low end of local port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: protocol
                                            
                                            	Protocol number
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: remote_port_high
                                            
                                            	High end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: remote_port_low
                                            
                                            	Low end of remote port range
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.ip_tos = None
                                                self.local_port_high = None
                                                self.local_port_low = None
                                                self.protocol = None
                                                self.remote_port_high = None
                                                self.remote_port_low = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:application-data'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.ip_tos is not None:
                                                    return True

                                                if self.local_port_high is not None:
                                                    return True

                                                if self.local_port_low is not None:
                                                    return True

                                                if self.protocol is not None:
                                                    return True

                                                if self.remote_port_high is not None:
                                                    return True

                                                if self.remote_port_low is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ApplicationData']['meta_info']


                                        class GeoCoordinates(object):
                                            """
                                            Geo\-coordinates LCAF type.
                                            
                                            .. attribute:: address
                                            
                                            	AFI address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: altitude
                                            
                                            	Height relative to sea level in meters
                                            	**type**\:  int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            .. attribute:: latitude
                                            
                                            	Bit that selects between North and South latitude
                                            	**type**\:   :py:class:`Latitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude>`
                                            
                                            .. attribute:: latitude_degrees
                                            
                                            	Degrees of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..90
                                            
                                            .. attribute:: latitude_minutes
                                            
                                            	Minutes of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: latitude_seconds
                                            
                                            	Seconds of latitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude
                                            
                                            	Bit that selects between East and West longitude
                                            	**type**\:   :py:class:`Longitude <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude>`
                                            
                                            .. attribute:: longitude_degrees
                                            
                                            	Degrees of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..180
                                            
                                            .. attribute:: longitude_minutes
                                            
                                            	Minutes of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            .. attribute:: longitude_seconds
                                            
                                            	Seconds of longitude
                                            	**type**\:  int
                                            
                                            	**range:** 0..59
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.address = None
                                                self.altitude = None
                                                self.latitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Latitude()
                                                self.latitude_degrees = None
                                                self.latitude_minutes = None
                                                self.latitude_seconds = None
                                                self.longitude = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates.Longitude()
                                                self.longitude_degrees = None
                                                self.longitude_minutes = None
                                                self.longitude_seconds = None

                                            class Latitude(FixedBitsDict):
                                                """
                                                Latitude

                                                Bit that selects between North and South latitude.
                                                Keys are:- N

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'N':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            class Longitude(FixedBitsDict):
                                                """
                                                Longitude

                                                Bit that selects between East and West longitude.
                                                Keys are:- E

                                                """

                                                def __init__(self):
                                                    self._dictionary = { 
                                                        'E':False,
                                                    }
                                                    self._pos_map = { 
                                                    }

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:geo-coordinates'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.address is not None:
                                                    return True

                                                if self.altitude is not None:
                                                    return True

                                                if self.latitude is not None:
                                                    if self.latitude._has_data():
                                                        return True

                                                if self.latitude_degrees is not None:
                                                    return True

                                                if self.latitude_minutes is not None:
                                                    return True

                                                if self.latitude_seconds is not None:
                                                    return True

                                                if self.longitude is not None:
                                                    if self.longitude._has_data():
                                                        return True

                                                if self.longitude_degrees is not None:
                                                    return True

                                                if self.longitude_minutes is not None:
                                                    return True

                                                if self.longitude_seconds is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.GeoCoordinates']['meta_info']


                                        class NatTraversal(object):
                                            """
                                            NAT\-Traversal LCAF type.
                                            
                                            .. attribute:: etr_udp_port
                                            
                                            	ETR UDP port
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: global_etr_rloc
                                            
                                            	Global ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_rloc
                                            
                                            	Map\-Server RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: ms_udp_port
                                            
                                            	Map\-Server UDP port (set to 4342)
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: private_etr_rloc
                                            
                                            	Private ETR RLOC address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: rtr_rlocs
                                            
                                            	List of RTR RLOC addresses
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  list of str
                                            
                                            
                                            ----
                                            	**type**\:  list of int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.etr_udp_port = None
                                                self.global_etr_rloc = None
                                                self.ms_rloc = None
                                                self.ms_udp_port = None
                                                self.private_etr_rloc = None
                                                self.rtr_rlocs = YLeafList()
                                                self.rtr_rlocs.parent = self
                                                self.rtr_rlocs.name = 'rtr_rlocs'

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:nat-traversal'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.etr_udp_port is not None:
                                                    return True

                                                if self.global_etr_rloc is not None:
                                                    return True

                                                if self.ms_rloc is not None:
                                                    return True

                                                if self.ms_udp_port is not None:
                                                    return True

                                                if self.private_etr_rloc is not None:
                                                    return True

                                                if self.rtr_rlocs is not None:
                                                    for child in self.rtr_rlocs:
                                                        if child is not None:
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.NatTraversal']['meta_info']


                                        class ExplicitLocatorPath(object):
                                            """
                                            Explicit Locator Path LCAF type.
                                            
                                            .. attribute:: hop
                                            
                                            	List of locator hops forming the explicit path
                                            	**type**\: list of    :py:class:`Hop <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop>`
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.hop = YList()
                                                self.hop.parent = self
                                                self.hop.name = 'hop'


                                            class Hop(object):
                                                """
                                                List of locator hops forming the explicit path.
                                                
                                                .. attribute:: hop_id  <key>
                                                
                                                	Unique identifier for the hop
                                                	**type**\:  str
                                                
                                                	**length:** 1..64
                                                
                                                .. attribute:: address
                                                
                                                	AFI address
                                                	**type**\: one of the below types:
                                                
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                                
                                                
                                                ----
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                                
                                                
                                                ----
                                                	**type**\:  str
                                                
                                                
                                                ----
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                
                                                ----
                                                .. attribute:: lrs_bits
                                                
                                                	Flag bits per hop
                                                	**type**\:   :py:class:`LrsBits <ydk.models.ietf.ietf_lisp.LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits>`
                                                
                                                

                                                """

                                                _prefix = 'lisp-ms'
                                                _revision = '2016-06-30'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.hop_id = None
                                                    self.address = None
                                                    self.lrs_bits = LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop.LrsBits()

                                                class LrsBits(FixedBitsDict):
                                                    """
                                                    LrsBits

                                                    Flag bits per hop.
                                                    Keys are:- strict , rloc\-probe , lookup

                                                    """

                                                    def __init__(self):
                                                        self._dictionary = { 
                                                            'strict':False,
                                                            'rloc-probe':False,
                                                            'lookup':False,
                                                        }
                                                        self._pos_map = { 
                                                        }

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                                    if self.hop_id is None:
                                                        raise YPYModelError('Key property hop_id is None')

                                                    return self.parent._common_path +'/ietf-lisp-mapserver:hop[ietf-lisp-mapserver:hop-id = ' + str(self.hop_id) + ']'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.hop_id is not None:
                                                        return True

                                                    if self.address is not None:
                                                        return True

                                                    if self.lrs_bits is not None:
                                                        if self.lrs_bits._has_data():
                                                            return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath.Hop']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:explicit-locator-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.hop is not None:
                                                    for child_ref in self.hop:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ExplicitLocatorPath']['meta_info']


                                        class SourceDestKey(object):
                                            """
                                            Source/Dest LCAF type.
                                            
                                            .. attribute:: dest
                                            
                                            	Destination address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: source
                                            
                                            	Source address
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.dest = None
                                                self.source = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:source-dest-key'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.dest is not None:
                                                    return True

                                                if self.source is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.SourceDestKey']['meta_info']


                                        class KeyValueAddress(object):
                                            """
                                            Key/Value Address LCAF type.
                                            
                                            .. attribute:: key
                                            
                                            	Address as Key
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            .. attribute:: value
                                            
                                            	Address as Value
                                            	**type**\: one of the below types:
                                            
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])/(([0\-9])\|([1\-2][0\-9])\|(3[0\-2]))
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(/(([0\-9])\|([0\-9]{2})\|(1[0\-1][0\-9])\|(12[0\-8])))
                                            
                                            
                                            ----
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                            
                                            
                                            ----
                                            	**type**\:  str
                                            
                                            
                                            ----
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            
                                            ----
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.key = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:key-value-address'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.key is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.KeyValueAddress']['meta_info']


                                        class ServicePath(object):
                                            """
                                            Service Path LCAF type.
                                            
                                            .. attribute:: service_index
                                            
                                            	Service path index for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: service_path_id
                                            
                                            	Service path identifier for the path for NSH header
                                            	**type**\:  int
                                            
                                            	**range:** 0..16777215
                                            
                                            

                                            """

                                            _prefix = 'lisp-ms'
                                            _revision = '2016-06-30'

                                            def __init__(self):
                                                self.parent = None
                                                self.service_index = None
                                                self.service_path_id = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/ietf-lisp-mapserver:service-path'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.service_index is not None:
                                                    return True

                                                if self.service_path_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress.ServicePath']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/ietf-lisp-mapserver:locator-address'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.address_type is not None:
                                                return True

                                            if self.afi_list is not None and self.afi_list._has_data():
                                                return True

                                            if self.application_data is not None and self.application_data._has_data():
                                                return True

                                            if self.as_number is not None:
                                                return True

                                            if self.as_number_lcaf is not None and self.as_number_lcaf._has_data():
                                                return True

                                            if self.distinguished_name is not None:
                                                return True

                                            if self.explicit_locator_path is not None and self.explicit_locator_path._has_data():
                                                return True

                                            if self.geo_coordinates is not None and self.geo_coordinates._has_data():
                                                return True

                                            if self.instance_id is not None and self.instance_id._has_data():
                                                return True

                                            if self.ipv4 is not None:
                                                return True

                                            if self.ipv4_prefix is not None:
                                                return True

                                            if self.ipv6 is not None:
                                                return True

                                            if self.ipv6_prefix is not None:
                                                return True

                                            if self.key_value_address is not None and self.key_value_address._has_data():
                                                return True

                                            if self.mac is not None:
                                                return True

                                            if self.nat_traversal is not None and self.nat_traversal._has_data():
                                                return True

                                            if self.no_address is not None:
                                                return True

                                            if self.null_address is not None and self.null_address._has_data():
                                                return True

                                            if self.service_path is not None and self.service_path._has_data():
                                                return True

                                            if self.source_dest_key is not None and self.source_dest_key._has_data():
                                                return True

                                            if self.virtual_network_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.ietf._meta import _ietf_lisp as meta
                                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator.LocatorAddress']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')
                                        if self.id is None:
                                            raise YPYModelError('Key property id is None')

                                        return self.parent._common_path +'/ietf-lisp-mapserver:locator[ietf-lisp-mapserver:id = ' + str(self.id) + ']'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.id is not None:
                                            return True

                                        if self.locator_address is not None and self.locator_address._has_data():
                                            return True

                                        if self.multicast_priority is not None:
                                            return True

                                        if self.multicast_weight is not None:
                                            return True

                                        if self.priority is not None:
                                            return True

                                        if self.weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.ietf._meta import _ietf_lisp as meta
                                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs.Locator']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/ietf-lisp-mapserver:rlocs'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.locator is not None:
                                        for child_ref in self.locator:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.ietf._meta import _ietf_lisp as meta
                                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping.Rlocs']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')
                                if self.id is None:
                                    raise YPYModelError('Key property id is None')

                                return self.parent._common_path +'/ietf-lisp-mapserver:mapping[ietf-lisp-mapserver:id = ' + str(self.id) + ']'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.id is not None:
                                    return True

                                if self.authoritative is not None:
                                    if self.authoritative._has_data():
                                        return True

                                if self.eid is not None and self.eid._has_data():
                                    return True

                                if self.map_reply_action is not None:
                                    return True

                                if self.rlocs is not None and self.rlocs._has_data():
                                    return True

                                if self.static is not None:
                                    return True

                                if self.ttl is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.ietf._meta import _ietf_lisp as meta
                                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings.Mapping']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/ietf-lisp-mapserver:registered-mappings'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mapping is not None:
                                for child_ref in self.mapping:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.ietf._meta import _ietf_lisp as meta
                            return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState.RegisteredMappings']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/ietf-lisp-mapserver:ms-state'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.registered_mappings is not None and self.registered_mappings._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.ietf._meta import _ietf_lisp as meta
                        return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole.MsState']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.lisp_role_type is None:
                        raise YPYModelError('Key property lisp_role_type is None')

                    return self.parent._common_path +'/ietf-lisp:lisp-role[ietf-lisp:lisp-role-type = ' + str(self.lisp_role_type) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.lisp_role_type is not None:
                        return True

                    if self.enabled is not None:
                        return True

                    if self.itr_state is not None and self.itr_state._has_data():
                        return True

                    if self.ms_state is not None and self.ms_state._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.ietf._meta import _ietf_lisp as meta
                    return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance.LispRole']['meta_info']

            @property
            def _common_path(self):
                if self.lisp_router_instance_id is None:
                    raise YPYModelError('Key property lisp_router_instance_id is None')

                return '/ietf-lisp:lisp-state/ietf-lisp:lisp-router-instances/ietf-lisp:lisp-router-instance[ietf-lisp:lisp-router-instance-id = ' + str(self.lisp_router_instance_id) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.lisp_router_instance_id is not None:
                    return True

                if self.lisp_role is not None:
                    for child_ref in self.lisp_role:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.ietf._meta import _ietf_lisp as meta
                return meta._meta_table['LispState.LispRouterInstances.LispRouterInstance']['meta_info']

        @property
        def _common_path(self):

            return '/ietf-lisp:lisp-state/ietf-lisp:lisp-router-instances'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.lisp_router_instance is not None:
                for child_ref in self.lisp_router_instance:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.ietf._meta import _ietf_lisp as meta
            return meta._meta_table['LispState.LispRouterInstances']['meta_info']

    @property
    def _common_path(self):

        return '/ietf-lisp:lisp-state'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.lisp_router_instances is not None and self.lisp_router_instances._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['LispState']['meta_info']


class SingleNodeMappingSystemIdentity(MappingSystemIdentity):
    """
    logically singular Map Server
    
    

    """

    _prefix = 'lisp'
    _revision = '2016-06-30'

    def __init__(self):
        MappingSystemIdentity.__init__(self)

    @staticmethod
    def _meta_info():
        from ydk.models.ietf._meta import _ietf_lisp as meta
        return meta._meta_table['SingleNodeMappingSystemIdentity']['meta_info']


